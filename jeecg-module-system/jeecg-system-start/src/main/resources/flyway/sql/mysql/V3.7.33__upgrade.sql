UPDATE `jeecg-boot`.`lite_flow_script` SET `script_data` = 'import com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.JSONArray;\nimport com.alibaba.fastjson.JSONObject;\nimport com.yomahub.liteflow.script.ScriptExecuteWrap;\nimport com.yomahub.liteflow.script.body.CommonScriptBody;\nimport com.yomahub.liteflow.spi.holder.ContextAwareHolder;\nimport org.apache.commons.lang3.StringUtils;\nimport testnet.client.service.ILiteFlowMessageSendService;\nimport testnet.common.dto.AssetUpdateDTO;\nimport testnet.common.entity.liteflow.TaskExecuteMessage;\nimport testnet.common.utils.CommandUtils;\nimport testnet.common.utils.FileUtils;\nimport testnet.common.utils.ObjectBase64Decoder;\n\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\nimport java.util.UUID;\n\n/**\n * 脚本名称：Xapp指纹探测\n * 适用资产：WEB\n * 配置：\n * command: \'/testnet-client/xapp -t %s -o %s --silent\'\n * 结果处理类名: assetUpdateProcessor\n */\n\npublic class Xapp implements CommonScriptBody {\n\n    public Void body(ScriptExecuteWrap wrap) {\n        TaskExecuteMessage taskExecuteMessage = wrap.cmp.getRequestData();\n        JSONObject instanceParams = JSONObject.parseObject(taskExecuteMessage.getTaskParams());\n        JSONObject config = JSONObject.parseObject(taskExecuteMessage.getConfig());\n        try {\n            ILiteFlowMessageSendService sendService = ContextAwareHolder.loadContextAware().getBean(ILiteFlowMessageSendService.class);\n            sendService.setTaskId(taskExecuteMessage.getTaskId());\n            String command = config.getString(\"command\");\n            String asset = instanceParams.getString(\"webUrl\");\n            String resultPath = taskExecuteMessage.getResultPath() + \"xapp_\" + UUID.randomUUID() + \".json\";\n            sendService.INFO(\"结果保存路径:{}\", resultPath);\n            command = String.format(command, asset, resultPath);\n            sendService.INFO(\"开始执行Xapp指纹探测,命令是：{}\", command);\n            // 超时60秒\n            CommandUtils.CommandResult result = CommandUtils.executeCommand(command, 60);\n            if (result.getExitCode() == 0) {\n                if (FileUtils.fileExists(resultPath)) {\n                    String content = new String(Files.readAllBytes(Paths.get(resultPath)));\n                    JSONArray jsonArray = JSON.parseArray(content);\n                    if (jsonArray != null) {\n                        JSONObject jsonObject = new JSONObject();\n                        JSONObject value = jsonArray.getJSONObject(0).getJSONObject(\"value\");\n                        if (value.containsKey(\"title\")) {\n                            String title = value.getString(\"title\");\n                            jsonObject.put(\"webTitle\", title);\n                            sendService.INFO(\"提取到的标题是:{}\", title);\n                        }\n                        JSONArray fingerprints = value.getJSONArray(\"fingerprints\");\n                        JSONObject httpFlow = value.getJSONObject(\"httpFlow\");\n                        if (httpFlow != null) {\n                            JSONArray exchanges = httpFlow.getJSONArray(\"exchanges\");\n                            if (exchanges != null && !exchanges.isEmpty()) {\n                                String requestHeader = exchanges.getJSONObject(0).getJSONObject(\"request\").getString(\"rawHeader\");\n                                jsonObject.put(\"requestHeader\", ObjectBase64Decoder.decodeString(requestHeader));\n                                String statusCode = exchanges.getJSONObject(0).getJSONObject(\"response\").getString(\"status\");\n                                if(StringUtils.isNotBlank(statusCode)){\n                                    jsonObject.put(\"statusCode\", statusCode.split(\" \")[0]);\n                                }\n                                String responseHeader = exchanges.getJSONObject(0).getJSONObject(\"response\").getString(\"rawHeader\");\n                                jsonObject.put(\"responseHeader\", ObjectBase64Decoder.decodeString(responseHeader));\n                            }\n                        }\n                        JSONArray tech = new JSONArray();\n                        if (fingerprints != null) {\n                            for (int i = 0; i < fingerprints.size(); i++) {\n                                JSONObject fingerprint = fingerprints.getJSONObject(i);\n                                String fingerprintName = fingerprint.getJSONObject(\"product\").getString(\"name\");\n                                sendService.INFO(\"Xapp指纹探测执行成功，获取到的指纹是：{}\", fingerprintName);\n                                JSONObject tmp = new JSONObject();\n                                tmp.put(\"name\", fingerprintName);\n                                tech.add(tmp);\n                            }\n                        }\n                        jsonObject.put(\"webUrl\", instanceParams.getString(\"webUrl\"));\n                        jsonObject.put(\"portId\", instanceParams.getString(\"portId\"));\n                        jsonObject.put(\"domain\", instanceParams.getString(\"domain\"));\n                        jsonObject.put(\"projectId\", instanceParams.getString(\"projectId\"));\n                        jsonObject.put(\"tech\", tech);\n                        AssetUpdateDTO assetUpdateDTO = new AssetUpdateDTO();\n                        assetUpdateDTO.setData(jsonObject.toJSONString());\n                        sendService.sendResult(assetUpdateDTO);\n                    }\n                } else {\n                    sendService.INFO(\"Xapp指纹探测执行成功，结果文件不存在，可能扫描结果为空！\");\n                }\n            } else {\n                sendService.ERROR(\"Xapp指纹探测执行失败,状态码是:{},输出信息:{}\", result.getExitCode(), result.getOutput());\n            }\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n        return null;\n    }\n}' WHERE `id` = '1806614988580831233';

UPDATE `lite_flow_script` SET `script_data` = 'import com.alibaba.fastjson.JSONArray;\nimport com.alibaba.fastjson.JSONObject;\nimport com.yomahub.liteflow.script.ScriptExecuteWrap;\nimport com.yomahub.liteflow.script.body.CommonScriptBody;\nimport com.yomahub.liteflow.spi.holder.ContextAwareHolder;\nimport org.apache.commons.lang.StringUtils;\nimport testnet.client.service.ILiteFlowMessageSendService;\nimport testnet.common.dto.AssetUpdateDTO;\nimport testnet.common.entity.liteflow.TaskExecuteMessage;\nimport testnet.common.utils.CommandUtils;\n\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\n/**\n * 脚本名称：TideFinger_Go指纹探测\n * 适用资产：WEB\n * 配置：\n * command: \'/testnet-client/TideFinger -u %s -np -nobr -nopoc\'\n * 结果处理类名: assetUpdateProcessor\n */\n\npublic class TideFinger_Go implements CommonScriptBody {\n\n    public Void body(ScriptExecuteWrap wrap) {\n        TaskExecuteMessage taskExecuteMessage = wrap.cmp.getRequestData();\n        JSONObject instanceParams = JSONObject.parseObject(taskExecuteMessage.getTaskParams());\n        JSONObject config = JSONObject.parseObject(taskExecuteMessage.getConfig());\n        try {\n            ILiteFlowMessageSendService sendService = ContextAwareHolder.loadContextAware().getBean(ILiteFlowMessageSendService.class);\n            sendService.setTaskId(taskExecuteMessage.getTaskId());\n            String command = config.getString(\"command\");\n            String asset = instanceParams.getString(\"webUrl\");\n            command = String.format(command, asset);\n            sendService.INFO(\"开始执行TideFinger,命令是：{}\", command);\n            CommandUtils.CommandResult result = CommandUtils.executeCommand(command);\n            if (result.getExitCode() == 0) {\n                sendService.INFO(\"TideFinger执行成功，结果是:{}\", result.getOutput());\n                Pattern pattern = Pattern.compile(\"\\\\[\\\\d{2}:\\\\d{2}:\\\\d{2}] \\\\[\\\\+] \\\\[(TCP/HTTP|TLS/HTTPS)] \\\\[(\\\\d{3})] ((\\\\[.*?])+?) .*? \\\\[(.*?)]\");\n                Matcher matcher = pattern.matcher(result.getOutput());\n                while (matcher.find()) {\n                    String statusCode = matcher.group(2);\n                    String fingerprint = matcher.group(3);\n                    String title = matcher.group(5);\n                    sendService.INFO(\"提取到的指纹是:{}\", fingerprint);\n                    sendService.INFO(\"提取到的标题是:{}\", title);\n                    sendService.INFO(\"提取到的状态码是:{}\", statusCode);\n                    JSONObject jsonObject = new JSONObject();\n                    jsonObject.put(\"portId\", instanceParams.getString(\"portId\"));\n                    jsonObject.put(\"domain\", instanceParams.getString(\"domain\"));\n                    jsonObject.put(\"projectId\", instanceParams.getString(\"projectId\"));\n                    jsonObject.put(\"webUrl\", instanceParams.getString(\"webUrl\"));\n                    if (StringUtils.isNotBlank(fingerprint)) {\n                        JSONArray versions = new JSONArray();\n                        String[] parts = fingerprint.split(\"]\\\\[\"); // 用特定的分隔符来拆分字符串\n                        for (String part : parts) {\n                            part = part.replace(\"[\", \"\").replace(\"]\", \"\");\n                            if (!part.trim().isEmpty()) {\n                                // 进一步拆分每个部分以获取名称和版本\n                                String[] nameAndVersion = part.split(\" \");\n                                JSONObject softwareInfo = new JSONObject();\n                                softwareInfo.put(\"name\", nameAndVersion[0]); // 软件名称\n                                if (nameAndVersion.length > 1) {\n                                    softwareInfo.put(\"version\", nameAndVersion[1]); // 软件版本\n                                }\n                                versions.add(softwareInfo);\n                            }\n                        }\n                        jsonObject.put(\"tech\", versions);\n                    }\n                    jsonObject.put(\"title\", title);\n                    jsonObject.put(\"statusCode\", statusCode);\n\n                    AssetUpdateDTO assetUpdateDTO = new AssetUpdateDTO();\n                    assetUpdateDTO.setData(jsonObject.toJSONString());\n                    sendService.sendResult(assetUpdateDTO);\n                }\n            } else {\n                sendService.ERROR(\"TideFinger执行失败,状态码是:{},输出信息:{}\", result.getExitCode(), result.getOutput());\n            }\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n        return null;\n    }\n}' WHERE `id` = '1806588765662212097';
