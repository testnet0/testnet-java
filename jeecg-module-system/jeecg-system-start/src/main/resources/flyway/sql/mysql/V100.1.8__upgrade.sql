# 优化Nmap 端口扫描脚本
UPDATE lite_flow_script set script_data ='import com.alibaba.fastjson.JSONObject;
import com.yomahub.liteflow.script.ScriptExecuteWrap;
import com.yomahub.liteflow.script.body.JaninoCommonScriptBody;
import com.yomahub.liteflow.spi.holder.ContextAwareHolder;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import testnet.client.service.ILiteFlowMessageSendService;
import testnet.common.dto.IpOrSubDomainToPortDTO;
import testnet.common.entity.liteflow.TaskExecuteMessage;
import testnet.common.utils.CommandUtils;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.io.File;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;


/**
 * 脚本名称：Nmap 端口扫描
 * 适用资产：子域名、IP
 * 配置：
 * command: ''nmap -T4 -sV -Pn %s -oX %s''
 * 结果处理类名: ipOrSubDomainToPortProcessor
 */
public class Nmap implements JaninoCommonScriptBody {

    public Void body(ScriptExecuteWrap wrap) {
        // 获取的是chain初始化的参数
        TaskExecuteMessage taskExecuteMessage = (TaskExecuteMessage) wrap.cmp.getRequestData();
        try {
            ILiteFlowMessageSendService messageSendService = (ILiteFlowMessageSendService) ContextAwareHolder.loadContextAware().getBean(ILiteFlowMessageSendService.class);
            messageSendService.setTaskId(taskExecuteMessage.getTaskId());
            JSONObject config = JSONObject.parseObject(taskExecuteMessage.getConfig());
            JSONObject instanceParams = JSONObject.parseObject(taskExecuteMessage.getTaskParams());
            String resultPath = taskExecuteMessage.getResultPath() + "nmap_" + UUID.randomUUID() + ".xml";
            messageSendService.INFO("结果保存路径:{}", resultPath);
            String command = config.getString("command");
            switch (taskExecuteMessage.getAssetType()) {
                case "ip":
                    command = String.format(command, instanceParams.getString("ip"), resultPath);
                    break;
                case "sub_domain":
                    command = String.format(command, instanceParams.getString("subDomain"), resultPath);
                    break;
                case "port":
                    command = String.format(command, instanceParams.getString("ip_dictText") + " -p " + instanceParams.getString("port"), resultPath);
                    break;
            }
            messageSendService.INFO("开始执行Nmap端口扫描,命令是:{}", command);
            CommandUtils.CommandResult result = CommandUtils.executeCommand(command);
            if (result.getExitCode() == 0) {
                messageSendService.INFO("Nmap端口扫描执行完成,结果是:{}", result.getOutput());
                IpOrSubDomainToPortDTO dto = new IpOrSubDomainToPortDTO();
                List<IpOrSubDomainToPortDTO.Port> portList = new ArrayList<>();
                DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
                File file = Paths.get(resultPath).toFile();
                Document doc = dBuilder.parse(file);
                doc.getDocumentElement().normalize();
                NodeList nodeList = doc.getElementsByTagName("port");
                for (int i = 0; i < nodeList.getLength(); i++) {
                    Node portNode = nodeList.item(i);
                    if (portNode.getNodeType() == Node.ELEMENT_NODE) {
                        Element portElement = (Element) portNode;
                        // 检查端口是否为 closed 状态，若是则跳过
                        String state = portElement.getElementsByTagName("state").item(0).getAttributes().getNamedItem("state").getNodeValue();
                        if ("closed".equals(state) || "filtered".equals(state)) {
                            continue;
                        }
                        IpOrSubDomainToPortDTO.Port port = new IpOrSubDomainToPortDTO.Port();
                        // 设置端口号
                        port.setPort(Integer.parseInt(portElement.getAttribute("portid")));
                        // 设置协议
                        port.setProtocol(portElement.getAttribute("protocol"));
                        // 获取服务信息
                        NodeList serviceList = portElement.getElementsByTagName("service");
                        if (serviceList.getLength() > 0) {
                            Element serviceElement = (Element) serviceList.item(0);
                            String product = serviceElement.getAttribute("product");
                            String version = serviceElement.getAttribute("version");
                            String service = serviceElement.getAttribute("name");
                            // 设置服务名称和版本号
                            port.setService(service);
                            port.setVersion(version);
                            port.setProduct(product);
                            if (service.equals("http") || service.equals("https")) {
                                port.setIsWeb("Y");
                            } else {
                                port.setIsWeb("N");
                            }
                        }
                        // 获取所属主机信息
                        if (doc.getElementsByTagName("address") != null && doc.getElementsByTagName("address").getLength() > 0) {
                            String ip = doc.getElementsByTagName("address").item(0).getAttributes().getNamedItem("addr").getNodeValue();
                            // 设置IP地址和主机名
                            port.setIp(ip);
                        }
                        if (doc.getElementsByTagName("hostname") != null && doc.getElementsByTagName("hostname").getLength() > 0) {
                            String hostName = doc.getElementsByTagName("hostname").item(0).getAttributes().getNamedItem("name").getNodeValue();
                            port.setHost(hostName);
                        }
                        portList.add(port);
                    }
                }
                dto.setPortList(portList);
                messageSendService.sendResult(dto);
            } else {
                messageSendService.ERROR("Nmap端口扫描执行失败,错误信息是:{}", result.getExitCode());
            }
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
        return null;
    }
}' WHERE id = '1790213876943757314';
# 优化AFROG漏洞扫描脚本
UPDATE lite_flow_chain set config = 'command: afrog -t %s -json-all %s' where id = '1817946499129675777';
UPDATE lite_flow_script set script_data = '
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.yomahub.liteflow.script.ScriptExecuteWrap;
import com.yomahub.liteflow.script.body.JaninoCommonScriptBody;
import com.yomahub.liteflow.spi.holder.ContextAwareHolder;
import testnet.client.service.ILiteFlowMessageSendService;
import testnet.common.dto.IpOrWebOrSubDomainToVulDTO;
import testnet.common.entity.liteflow.TaskExecuteMessage;
import testnet.common.utils.CommandUtils;
import testnet.common.utils.FileUtils;

import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * 脚本名称：Afrog漏洞扫描
 * 适用资产：WEB、子域名、ip
 * 配置：
 * command: ''afrog  -t %s -json %s''
 * 结果处理类名: ipOrWebOrSubDomainToVulProcessor
 */

public class Afrog implements JaninoCommonScriptBody {

    public Void body(ScriptExecuteWrap wrap) {
        TaskExecuteMessage taskExecuteMessage = (TaskExecuteMessage) wrap.cmp.getRequestData();
        JSONObject instanceParams = JSONObject.parseObject(taskExecuteMessage.getTaskParams());
        JSONObject config = JSONObject.parseObject(taskExecuteMessage.getConfig());
        ILiteFlowMessageSendService sendService = (ILiteFlowMessageSendService) ContextAwareHolder.loadContextAware().getBean(ILiteFlowMessageSendService.class);
        try {
            sendService.setTaskId(taskExecuteMessage.getTaskId());
            String resultPath = taskExecuteMessage.getResultPath() + "afrog_" + UUID.randomUUID() + ".json";
            sendService.INFO("结果保存路径:{}", resultPath);
            String command = config.getString("command");
            String asset = "";
            switch (taskExecuteMessage.getAssetType()) {
                case "ip":
                    asset = instanceParams.getString("ip");
                    break;
                case "web":
                    asset = instanceParams.getString("webUrl");
                    break;
                case "sub_domain":
                    asset = instanceParams.getString("subDomain");
                    break;
            }
            command = String.format(command, asset, resultPath);
            sendService.INFO("开始执行Afrog漏洞扫描,命令是：{}", command);
            CommandUtils.CommandResult result = CommandUtils.executeCommand(command);
            if (result.getExitCode() == 0) {
                if (FileUtils.fileExists(resultPath)) {
                    String content = new String(Files.readAllBytes(Paths.get(resultPath)));
                    JSONArray jsonArray = JSON.parseArray(content);
                    if (jsonArray != null) {
                        sendService.INFO("Afrog漏洞扫描成功，结果是：" + content);
                        IpOrWebOrSubDomainToVulDTO ipOrWebOrSubDomainToVulDTO = getIpOrWebOrSubDomainToVulDTO(jsonArray);
                        sendService.sendResult(ipOrWebOrSubDomainToVulDTO);
                    }
                } else {
                    sendService.INFO("Afrog漏洞扫描执行成功，结果文件不存在，可能扫描结果为空！");
                }
            } else {
                sendService.ERROR("Afrog漏洞扫描执行失败,状态码是:{},输出信息:{}", result.getExitCode(), result.getOutput());
            }
        } catch (Exception e) {
            sendService.ERROR("Afrog漏洞扫描执行失败,错误信息:{}", e.getMessage());
            throw new RuntimeException(e);
        }
        return null;
    }

    private IpOrWebOrSubDomainToVulDTO getIpOrWebOrSubDomainToVulDTO(JSONArray jsonArray) {
        IpOrWebOrSubDomainToVulDTO ipOrWebOrSubDomainToVulDTO = new IpOrWebOrSubDomainToVulDTO();
        List<IpOrWebOrSubDomainToVulDTO.AssetVul> assetVulList = new ArrayList<>();
        for (Object o : jsonArray) {
            JSONObject jsonObject = (JSONObject) o;
            IpOrWebOrSubDomainToVulDTO.AssetVul assetVul = new IpOrWebOrSubDomainToVulDTO.AssetVul();
            JSONObject info = jsonObject.getJSONObject("pocinfo");
            if (info != null) {
                assetVul.setVulName(info.getString("infoname"));
                assetVul.setSeverity(info.getString("infoseg"));
                assetVul.setVulDesc(info.getString("infodescription"));
            }
            if (jsonObject.getString("request") != null) {
                assetVul.setRequestBody(jsonObject.getString("request"));
            }
            if (jsonObject.getString("response") != null) {
                assetVul.setResponseBody(jsonObject.getString("response"));
            }
            if (jsonObject.getString("fulltarget") != null) {
                assetVul.setVulUrl(jsonObject.getString("fulltarget"));
            }
            if (jsonObject.getJSONArray("pocresult") != null && jsonObject.getJSONArray("pocresult").size() > 1) {
                assetVul.setRequestBody(jsonObject.getJSONArray("pocresult").getString(0));
                assetVul.setResponseBody(jsonObject.getJSONArray("pocresult").getString(1));
            }
            assetVulList.add(assetVul);
        }
        ipOrWebOrSubDomainToVulDTO.setAssetVulList(assetVulList);
        return ipOrWebOrSubDomainToVulDTO;
    }

}
' WHERE id = '1817837720312664066';

UPDATE lite_flow_script set script_data ='import com.alibaba.fastjson.JSONObject;
import com.yomahub.liteflow.script.ScriptExecuteWrap;
import com.yomahub.liteflow.script.body.JaninoCommonScriptBody;
import com.yomahub.liteflow.spi.holder.ContextAwareHolder;
import org.apache.commons.lang.StringUtils;
import testnet.client.service.ILiteFlowMessageSendService;
import testnet.common.entity.liteflow.ClientToolVersion;
import testnet.common.entity.liteflow.TaskExecuteMessage;
import testnet.common.utils.CommandUtils;
import testnet.common.utils.FileUtils;

import java.io.IOException;
import java.util.UUID;

public class ToolsInstall implements JaninoCommonScriptBody {

    private final ILiteFlowMessageSendService sendService;

    public ToolsInstall() {
        this.sendService = (ILiteFlowMessageSendService) ContextAwareHolder.loadContextAware().getBean(ILiteFlowMessageSendService.class);
    }

    @Override
    public Void body(ScriptExecuteWrap wrap) {
        TaskExecuteMessage taskExecuteMessage = (TaskExecuteMessage) wrap.cmp.getRequestData();
        sendService.setTaskId(taskExecuteMessage.getTaskId());
        JSONObject params = JSONObject.parseObject(taskExecuteMessage.getTaskParams());
        if (params == null) {
            sendService.ERROR("工具安装失败！参数为空");
            return null;
        }
        String installCommand = params.getString("installCommand");
        String checkVersionCommand = params.getString("versionCheckCommand");
        try {
            ClientToolVersion clientToolVersion = new ClientToolVersion();
            String version = checkToolVersion(checkVersionCommand);
            if (StringUtils.isBlank(version)) {
                executeCommand(installCommand);
                version = checkToolVersion(checkVersionCommand);
                clientToolVersion.setToolVersion(version);
                sendService.sendResult(clientToolVersion);
            } else {
                clientToolVersion.setToolVersion(version);
                sendService.sendResult(clientToolVersion);
                sendService.INFO("工具已存在，跳过安装。");
            }
        } catch (Exception e) {
            sendService.ERROR("工具安装过程中发生错误：" + e.getMessage());
            throw new RuntimeException(e);
        }

        return null;
    }

    private String checkToolVersion(String checkVersionCommand) {
        String versionFileName = generateFileName();
        FileUtils.createFileAndWrite(versionFileName, checkVersionCommand);

        if (!FileUtils.fileExists(versionFileName)) {
            sendService.ERROR("检查版本文件创建失败");
            return "";
        }
        CommandUtils.CommandResult versionResult = null;
        try {
            versionResult = CommandUtils.executeCommand("bash " + versionFileName);
            FileUtils.deleteFile(versionFileName);
            sendService.INFO("开始检测工具版本" + "，命令是：" + checkVersionCommand);
            if (versionResult.getExitCode() == 0) {
                if (StringUtils.isNotBlank(versionResult.getOutput())) {
                    sendService.INFO("工具安装成功，版本是：" + versionResult.getOutput());
                    return versionResult.getOutput();
                } else {
                    sendService.INFO("工具未安装");
                    return "";
                }
            } else {
                sendService.ERROR("工具版本检查失败，状态码是：" + versionResult.getExitCode() + ",错误信息：" + versionResult.getOutput());
                return "";
            }
        } catch (Exception e) {
            if (versionResult != null) {
                sendService.ERROR("工具版本检查失败，错误信息：" + e.getMessage() + "输出信息：", versionResult.getOutput());
            }
            return "";
        }
    }

    private void executeCommand(String command) throws IOException, InterruptedException {
        String fileName = generateFileName();
        FileUtils.createFileAndWrite(fileName, command);

        if (!FileUtils.fileExists(fileName)) {
            sendService.ERROR("文件创建失败：" + fileName);
            return;
        }
        sendService.INFO("开始安装工具" + "，命令是：" + command);
        CommandUtils.CommandResult result = CommandUtils.executeCommand("bash " + fileName);
        FileUtils.deleteFile(fileName);

        if (result.getExitCode() == 0) {
            sendService.INFO("工具安装成功，开始检查版本");
        } else {
            sendService.ERROR("工具安装失败,状态码是：" + result.getExitCode() + ",错误信息：" + result.getOutput());
        }
    }

    private String generateFileName() {
        return UUID.randomUUID().toString() + ".sh";
    }
}' WHERE id = '1816737017152946177';

UPDATE `jeecg-boot`.`lite_flow_script` SET `install_command` = 'cd /testnet-client/tools
if [ -z "$(ls -A dirsearch)" ]; then
    rm -rf dirsearch
fi
git clone --depth 1 --branch master https://github.com/maurosoria/dirsearch.git
cd dirsearch
pip3 install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/' WHERE `id` = '1801110432837046273';

--  修改仪表盘组件的名称
UPDATE `onl_drag_comp` SET `parent_id` = '0', `comp_name` = '常用', `comp_type` = '', `icon` = 'ant-design:setting-twotone', `order_num` = 2, `type_id` = NULL, `comp_config` = NULL, `status` = '1', `create_by` = NULL, `create_time` = NULL, `update_by` = 'jeecg', `update_time` = '2022-04-24 11:02:19' WHERE `id` = '100';
UPDATE `onl_drag_comp` SET `parent_id` = '0', `comp_name` = '布局', `comp_type` = 'layout', `icon` = 'ic:baseline-tab', `order_num` = 3, `type_id` = NULL, `comp_config` = NULL, `status` = '1', `create_by` = NULL, `create_time` = NULL, `update_by` = 'admin', `update_time` = '2022-04-29 09:49:13' WHERE `id` = '100101';
UPDATE `onl_drag_comp` SET `parent_id` = '0', `comp_name` = '数据', `comp_type` = 'dataList', `icon` = 'ant-design:table-outlined', `order_num` = 3, `type_id` = NULL, `comp_config` = NULL, `status` = '1', `create_by` = NULL, `create_time` = NULL, `update_by` = 'admin', `update_time` = '2022-04-29 09:49:48' WHERE `id` = '100102';
UPDATE `onl_drag_comp` SET `parent_id` = '0', `comp_name` = '首页', `comp_type` = 'home', `icon` = 'carbon:home', `order_num` = 9, `type_id` = NULL, `comp_config` = NULL, `status` = '1', `create_by` = NULL, `create_time` = NULL, `update_by` = 'admin', `update_time` = '2022-04-29 09:50:07' WHERE `id` = '100104';
UPDATE `onl_drag_comp` SET `parent_id` = '0', `comp_name` = '地图', `comp_type` = 'dataList', `icon` = 'ant-design:table-outlined', `order_num` = 3, `type_id` = NULL, `comp_config` = NULL, `status` = '1', `create_by` = NULL, `create_time` = NULL, `update_by` = 'admin', `update_time` = '2022-04-29 09:49:48' WHERE `id` = '100120';
UPDATE `onl_drag_comp` SET `parent_id` = '0', `comp_name` = '图表', `comp_type` = 'chart', `icon` = 'ant-design:bar-chart-outlined', `order_num` = 1, `type_id` = NULL, `comp_config` = '', `status` = '1', `create_by` = NULL, `create_time` = NULL, `update_by` = NULL, `update_time` = '2022-04-29 17:52:06' WHERE `id` = '200';
UPDATE `onl_drag_comp` SET `parent_id` = '0', `comp_name` = '自定义', `comp_type` = 'customForm', `icon` = 'ant-design:project-filled', `order_num` = 2, `type_id` = NULL, `comp_config` = NULL, `status` = '1', `create_by` = 'jeecg', `create_time` = '2022-07-13 19:02:51', `update_by` = 'ldd', `update_time` = '2023-02-17 21:18:37' WHERE `id` = '707153616621699072';
UPDATE `onl_drag_comp` SET `parent_id` = '0', `comp_name` = '个性', `comp_type` = 'custom', `icon` = 'ant-design:appstore-twotone', `order_num` = 100, `type_id` = NULL, `comp_config` = NULL, `status` = '1', `create_by` = 'admin', `create_time` = '2022-07-18 19:22:09', `update_by` = 'admin', `update_time` = '2022-07-18 19:33:20' WHERE `id` = '708970414976712704';
UPDATE `onl_drag_comp` SET `parent_id` = '0', `comp_name` = '表单', `comp_type` = 'customForm', `icon` = 'ant-design:project-filled', `order_num` = 2, `type_id` = NULL, `comp_config` = NULL, `status` = '1', `create_by` = 'jeecg', `create_time` = '2022-07-13 19:02:51', `update_by` = 'ldd', `update_time` = '2023-02-17 21:18:37' WHERE `id` = '707153616621699072';
UPDATE `onl_drag_comp` SET `parent_id` = '100120', `comp_name` = '飞线地图', `comp_type` = 'JFlyLineMap', `icon` = 'la:plane', `order_num` = 1, `type_id` = NULL, `comp_config` = '{\n  \"w\": 12,\n  \"h\": 50,\n  \"dataType\": 1,\n  \"background\": \"#292626\",\n  \"url\": \"http://api.jeecg.com/mock/33/radar\",\n  \"timeOut\": 0,\n      \"dataMapping\": [\n    {\n      \"filed\": \"区域\",\n      \"mapping\": \"\"\n    },\n    {\n      \"filed\": \"数值\",\n      \"mapping\": \"\"\n    }\n  ],\n  \"turnConfig\": {\n    \"url\": \"\"\n  },\n  \"linkageConfig\": [],\n  \"chartData\": [\n    {\n      \"fromName\": \"江苏\",\n      \"toName\": \"贵州\",\n      \"fromLng\": 118.8062,\n      \"fromLat\": 31.9208,\n      \"toLng\": 106.6992,\n      \"toLat\": 26.7682,\n      \"value\": 100\n    },\n    {\n      \"fromName\": \"江苏\",\n      \"toName\": \"北京\",\n      \"fromLng\": 118.8062,\n      \"fromLat\": 31.9208,\n      \"toLng\": 116.46,\n      \"toLat\": 39.92,\n      \"value\": 100\n    },\n    {\n      \"fromName\": \"新疆\",\n      \"toName\": \"北京\",\n      \"fromLng\": 87.68,\n      \"fromLat\": 43.67,\n      \"toLng\": 116.46,\n      \"toLat\": 39.92,\n      \"value\": 100\n    }\n  ],\n  \"commonOption\": {\n    \"barSize\": 10,\n    \"barColor\": \"#D6F263\",\n    \"barColor2\": \"#A3DB6B\",\n    \"gradientColor\": false,\n    \"areaColor\": {\n      \"color1\": \"#323c48\",\n      \"color2\": \"#3B3737\"\n    },\n    \"inRange\": {\n      \"color\": [\n        \"#04387b\",\n        \"#467bc0\"\n      ]\n    },\n    \"effect\": {\n      \"show\": true,\n      \"trailLength\": 0,\n      \"period\": 6,\n      \"symbolSize\": 15\n    },\n    \"breadcrumb\": {\n      \"drillDown\": false,\n      \"textColor\": \"#ffffff\"\n    }\n  },\n  \"option\": {\n    \"area\": {\n      \"markerCount\": 5,\n      \"shadowBlur\": 10,\n      \"markerOpacity\": 1,\n      \"markerColor\": \"#DDE330\",\n      \"shadowColor\": \"#DDE330\",\n      \"scatterLabelShow\": false,\n      \"markerType\": \"effectScatter\",\n      \"value\": [\n        \"china\"\n      ],\n      \"name\": [\n        \"中国\"\n      ]\n    },\n    \"graphic\": [],\n    \"grid\": {\n      \"show\": false,\n      \"bottom\": 115\n    },\n    \"card\": {\n      \"title\": \"\",\n      \"extra\": \"\",\n      \"rightHref\": \"\",\n      \"size\": \"default\"\n    },\n    \"title\": {\n      \"text\": \"\",\n      \"padding\": [\n        5,\n        0,\n        0,\n        15\n      ],\n      \"show\": true\n    },\n    \"visualMap\": {\n      \"show\": false,\n      \"min\": 0,\n      \"type\": \"continuous\",\n      \"max\": 200,\n      \"left\": \"5%\",\n      \"top\": \"bottom\",\n      \"calculable\": true,\n      \"seriesIndex\": [\n        2\n      ]\n    },\n    \"geo\": {\n      \"top\": 80,\n      \"label\": {\n        \"emphasis\": {\n          \"show\": false,\n          \"color\": \"#fff\"\n        }\n      },\n      \"roam\": true,\n      \"zoom\": 1,\n      \"itemStyle\": {\n        \"normal\": {\n          \"borderColor\": \"#5A7864\",\n          \"borderWidth\": 1,\n          \"areaColor\": \"#323c48\",\n          \"shadowColor\": \"\",\n          \"shadowOffsetX\": 0,\n          \"shadowOffsetY\": 0,\n          \"shadowBlur\": 0\n        },\n        \"emphasis\": {\n          \"areaColor\": \"#EEDD78\",\n          \"borderWidth\": 0\n        }\n      }\n    }\n  }\n}', `status` = '1', `create_by` = NULL, `create_time` = NULL, `update_by` = 'admin', `update_time` = '2022-08-05 11:16:54' WHERE `id` = '100120101';
UPDATE `onl_drag_comp` SET `parent_id` = '100120', `comp_name` = '柱形地图', `comp_type` = 'JBarMap', `icon` = 'uil:graph-bar', `order_num` = 1, `type_id` = NULL, `comp_config` = '{\n  \"w\": 12,\n  \"h\": 30,\n  \"dataType\": 1,\n  \"background\": \"#ffffff\",\n  \"url\": \"http://api.jeecg.com/mock/33/radar\",\n  \"timeOut\": 0,\n      \"dataMapping\": [\n    {\n      \"filed\": \"区域\",\n      \"mapping\": \"\"\n    },\n    {\n      \"filed\": \"数值\",\n      \"mapping\": \"\"\n    }\n  ],\n  \"turnConfig\": {\n    \"url\": \"\"\n  },\n  \"linkageConfig\": [],\n  \"chartData\": [\n    {\n      \"name\": \"北京\",\n      \"value\": 900\n    },\n    {\n      \"name\": \"山西\",\n      \"value\": 1681\n    },\n    {\n      \"name\": \"内蒙古\",\n      \"value\": 47\n    },\n    {\n      \"name\": \"辽宁\",\n      \"value\": 1667\n    },\n    {\n      \"name\": \"福建\",\n      \"value\": 516\n    },\n    {\n      \"name\": \"江西\",\n      \"value\": 591\n    },\n    {\n      \"name\": \"山东\",\n      \"value\": 419\n    },\n    {\n      \"name\": \"河南\",\n      \"value\": 137\n    },\n    {\n      \"name\": \"云南\",\n      \"value\": 983\n    },\n    {\n      \"name\": \"西藏\",\n      \"value\": 9\n    },\n    {\n      \"name\": \"陕西\",\n      \"value\": 580\n    },\n    {\n      \"name\": \"甘肃\",\n      \"value\": 556\n    },\n    {\n      \"name\": \"海南\",\n      \"value\": 14\n    }\n  ],\n  \"commonOption\": {\n    \"barSize\": 12,\n    \"barColor\": \"#D6F263\",\n    \"barColor2\": \"#A3DB6B\",\n    \"gradientColor\": false,\n    \"areaColor\": {\n      \"color1\": \"#f7f7f7\",\n      \"color2\": \"#3B3737\"\n    },\n    \"inRange\": {\n      \"color\": [\n        \"#04387b\",\n        \"#467bc0\"\n      ]\n    },\n    \"breadcrumb\": {\n      \"drillDown\": false,\n      \"textColor\": \"#000000\"\n    }\n  },\n  \"option\": {\n    \"drillDown\": false,\n    \"tooltip\": {\n      \"trigger\": \"item\",\n      \"show\": false,\n      \"enterable\": true,\n      \"textStyle\": {\n        \"fontSize\": 20,\n        \"color\": \"#fff\"\n      },\n      \"backgroundColor\": \"rgba(0,2,89,0.8)\"\n    },\n    \"area\": {\n      \"markerCount\": 5,\n      \"shadowBlur\": 10,\n      \"markerOpacity\": 1,\n      \"markerColor\": \"#DDE330\",\n      \"shadowColor\": \"#DDE330\",\n      \"scatterLabelShow\": false,\n      \"markerType\": \"effectScatter\",\n      \"value\": [\n        \"china\"\n      ],\n      \"name\": [\n        \"中国\"\n      ]\n    },\n    \"graphic\": [],\n    \"grid\": {\n      \"show\": false,\n      \"bottom\": 115\n    },\n    \"card\": {\n      \"title\": \"\",\n      \"extra\": \"\",\n      \"rightHref\": \"\",\n      \"size\": \"default\"\n    },\n    \"title\": {\n      \"text\": \"\",\r\n			\"textStyle\":{\r\n			  \"fontWeight\":\"normal\"\r\n			},\n      \"left\": 10,\n      \"show\": true\n    },\n    \"visualMap\": {\n      \"show\": false,\n      \"max\": 200,\n      \"seriesIndex\": [\n        0\n      ]\n    },\n    \"geo\": {\n      \"top\": 30,\n      \"roam\": true,\n      \"aspectScale\": 0.96,\n      \"zoom\": 1,\n      \"itemStyle\": {\n        \"normal\": {\n          \"borderColor\": \"#a9a9a9\",\n          \"borderWidth\": 1,\n          \"areaColor\": \"#37805B\",\n          \"shadowColor\": \"#80d9f8\",\n          \"shadowOffsetX\": 0,\n          \"shadowOffsetY\": 0,\n          \"shadowBlur\": 0\n        },\r\n        \"emphasis\": {\r\n          \"areaColor\": \"#fff59c\"\r\n        }\n      }\n    },\n    \"series \": []\n  }\n}', `status` = '1', `create_by` = NULL, `create_time` = NULL, `update_by` = 'admin', `update_time` = '2022-08-05 11:17:01' WHERE `id` = '100120102';
UPDATE `onl_drag_comp` SET `parent_id` = '100120', `comp_name` = '时间轴飞线地图', `comp_type` = 'JTotalFlyLineMap', `icon` = 'fluent:airplane-take-off-16-regular', `order_num` = 1, `type_id` = NULL, `comp_config` = '{\n  \"w\": 12,\n  \"h\": 55,\n  \"dataType\": 1,\n  \"url\": \"http://api.jeecg.com/mock/33/radar\",\n  \"timeOut\": 0,\n  \"background\": \"#000000\",\n      \"dataMapping\": [\n    {\n      \"filed\": \"区域\",\n      \"mapping\": \"\"\n    },\n    {\n      \"filed\": \"数值\",\n      \"mapping\": \"\"\n    }\n  ],\n  \"turnConfig\": {\n    \"url\": \"\"\n  },\n  \"linkageConfig\": [],\n  \"chartData\": [\n    {\n      \"fromName\": \"江苏\",\n      \"toName\": \"贵州\",\n      \"fromLng\": 118.8062,\n      \"fromLat\": 31.9208,\n      \"toLng\": 106.6992,\n      \"toLat\": 26.7682,\n      \"value\": 100,\n      \"group\": 2017\n    },\n    {\n      \"fromName\": \"河南\",\n      \"toName\": \"云南\",\n      \"fromLng\": 113.4668,\n      \"fromLat\": 34.6234,\n      \"toLng\": 102.9199,\n      \"toLat\": 25.4663,\n      \"value\": 100,\n      \"group\": 2017\n    },\n    {\n      \"fromName\": \"江苏\",\n      \"toName\": \"甘肃\",\n      \"fromLng\": 118.8062,\n      \"fromLat\": 31.9208,\n      \"toLng\": 103.5901,\n      \"toLat\": 36.3043,\n      \"value\": 100,\n      \"group\": 2018\n    },\n    {\n      \"fromName\": \"江苏\",\n      \"toName\": \"广东\",\n      \"fromLng\": 118.8062,\n      \"fromLat\": 31.9208,\n      \"toLng\": 113.12244,\n      \"toLat\": 31.9208,\n      \"value\": 147,\n      \"group\": 2018\n    },\n    {\n      \"fromName\": \"江苏\",\n      \"toName\": \"北京\",\n      \"fromLng\": 118.8062,\n      \"fromLat\": 31.9208,\n      \"toLng\": 116.4551,\n      \"toLat\": 40.2539,\n      \"value\": 100,\n      \"group\": 2019\n    }\n  ],\n  \"commonOption\": {\n    \"barSize\": 10,\n    \"barColor\": \"#D6F263\",\n    \"barColor2\": \"#A3DB6B\",\n    \"gradientColor\": true,\n    \"areaColor\": {\n      \"color1\": \"#0A0909\",\n      \"color2\": \"#3B3737\"\n    },\n    \"inRange\": {\n      \"color\": [\n        \"#04387b\",\n        \"#467bc0\"\n      ]\n    },\n    \"breadcrumb\": {\n      \"drillDown\": false,\n      \"textColor\": \"#ffffff\"\n    }\n  },\n  \"option\": {\n    \"area\": {\n      \"markerCount\": 5,\n      \"shadowBlur\": 10,\n      \"markerOpacity\": 1,\n      \"markerColor\": \"#DDE330\",\n      \"shadowColor\": \"#DDE330\",\n      \"scatterLabelShow\": false,\n      \"markerType\": \"effectScatter\",\n      \"value\": [\n        \"china\"\n      ],\n      \"name\": [\n        \"中国\"\n      ]\n    },\n    \"graphic\": [],\n    \"grid\": {\n      \"show\": false,\n      \"bottom\": 115\n    },\n    \"card\": {\n      \"title\": \"\",\n      \"extra\": \"\",\n      \"rightHref\": \"\",\n      \"size\": \"default\"\n    },\n    \"title\": {\n      \"text\": \"\",\n      \"show\": true,\n      \"left\": 10,\n      \"textStyle\": {\n        \"color\": \"#70DB93\",\n        \"fontSize\": \"22px\"\n      },\n      \"subtextStyle\": {\n        \"color\": \"#ffffff\",\n        \"fontSize\": \"12px\"\n      }\n    },\n    \"geo\": {\n      \"top\": 50,\n      \"left\": 100,\n      \"label\": {\n        \"normal\": {\n          \"show\": false\n        },\n        \"emphasis\": {\n          \"show\": false,\n          \"color\": \"#fff\"\n        }\n      },\n      \"roam\": true,\n      \"zoom\": 0.9,\n      \"itemStyle\": {\n        \"normal\": {\n          \"borderColor\": \"#93ebf8\",\n          \"borderWidth\": 1,\n          \"areaColor\": \"\",\n          \"shadowColor\": \"#80d9f8\",\n          \"shadowOffsetX\": -2,\n          \"shadowOffsetY\": 2,\n          \"shadowBlur\": 10\n        },\n        \"emphasis\": {\n          \"areaColor\": \"#EEDD78\",\n          \"borderWidth\": 0\n        }\n      }\n    },\n    \"timeline\": {\n      \"show\": true,\n      \"axisType\": \"category\",\n      \"autoPlay\": false,\n      \"playInterval\": 2000,\n      \"left\": \"10%\",\n      \"right\": \"5%\",\n      \"bottom\": 10,\n      \"padding\": 5,\n      \"width\": \"80%\",\n      \"label\": {\n        \"normal\": {\n          \"textStyle\": {\n            \"color\": \"#ffffff\"\n          }\n        },\n        \"emphasis\": {\n          \"textStyle\": {\n            \"color\": \"#000000\"\n          }\n        }\n      },\n      \"symbolSize\": 10,\n      \"lineStyle\": {\n        \"color\": \"#555555\"\n      },\n      \"checkpointStyle\": {\n        \"borderColor\": \"#777777\",\n        \"borderWidth\": 2\n      },\n      \"controlStyle\": {\n        \"showNextBtn\": true,\n        \"showPrevBtn\": true,\n        \"normal\": {\n          \"color\": \"#666666\",\n          \"borderColor\": \"#666666\"\n        },\n        \"emphasis\": {\n          \"color\": \"#aaaaaa\",\n          \"borderColor\": \"#aaaaaa\"\n        }\n      }\n    }\n  }\n}', `status` = '1', `create_by` = NULL, `create_time` = NULL, `update_by` = 'admin', `update_time` = '2022-08-05 11:17:09' WHERE `id` = '100120103';
UPDATE `onl_drag_comp` SET `parent_id` = '100120', `comp_name` = '柱形排名形地图', `comp_type` = 'JTotalBarMap', `icon` = 'ph:chart-bar-horizontal', `order_num` = 1, `type_id` = NULL, `comp_config` = '{\n  \"w\": 12,\n  \"h\": 55,\n  \"dataType\": 1,\n  \"url\": \"http://api.jeecg.com/mock/33/radar\",\n  \"timeOut\": 0,\n  \"background\": \"#000000\",\n      \"dataMapping\": [\n    {\n      \"filed\": \"区域\",\n      \"mapping\": \"\"\n    },\n    {\n      \"filed\": \"数值\",\n      \"mapping\": \"\"\n    }\n  ],\n  \"turnConfig\": {\n    \"url\": \"\"\n  },\n  \"linkageConfig\": [],\n  \"chartData\": [\n    {\n      \"name\": \"江苏\",\n      \"lng\": 118.8062,\n      \"lat\": 31.9208,\n      \"value\": 500,\n      \"group\": 2017\n    },\n    {\n      \"name\": \"贵州\",\n      \"lng\": 106.6992,\n      \"lat\": 26.7682,\n      \"value\": 100,\n      \"group\": 2017\n    },\n    {\n      \"name\": \"河南\",\n      \"lng\": 113.4668,\n      \"lat\": 34.6234,\n      \"value\": 100,\n      \"group\": 2017\n    },\n    {\n      \"name\": \"云南\",\n      \"lng\": 102.9199,\n      \"lat\": 25.4663,\n      \"value\": 300,\n      \"group\": 2017\n    },\n    {\n      \"name\": \"江苏\",\n      \"lng\": 118.8062,\n      \"lat\": 31.9208,\n      \"value\": 478,\n      \"group\": 2018\n    },\n    {\n      \"name\": \"贵州\",\n      \"lng\": 106.6992,\n      \"lat\": 26.7682,\n      \"value\": 269,\n      \"group\": 2018\n    },\n    {\n      \"name\": \"河南\",\n      \"lng\": 113.4668,\n      \"lat\": 34.6234,\n      \"value\": 128,\n      \"group\": 2018\n    },\n    {\n      \"name\": \"云南\",\n      \"lng\": 102.9199,\n      \"lat\": 25.4663,\n      \"value\": 100,\n      \"group\": 2018\n    },\n    {\n      \"name\": \"江苏\",\n      \"lng\": 118.8062,\n      \"lat\": 31.9208,\n      \"value\": 236,\n      \"group\": 2019\n    },\n    {\n      \"name\": \"贵州\",\n      \"lng\": 106.6992,\n      \"lat\": 26.7682,\n      \"value\": 569,\n      \"group\": 2019\n    },\n    {\n      \"name\": \"河南\",\n      \"lng\": 113.4668,\n      \"lat\": 34.6234,\n      \"value\": 479,\n      \"group\": 2019\n    },\n    {\n      \"name\": \"云南\",\n      \"lng\": 102.9199,\n      \"lat\": 25.4663,\n      \"value\": 259,\n      \"group\": 2019\n    }\n  ],\n  \"commonOption\": {\n    \"barSize\": 10,\n    \"barColor\": \"#D6F263\",\n    \"barColor2\": \"#A3DB6B\",\n    \"gradientColor\": true,\n    \"mapTitle\": \"\",\n    \"dataTitle\": \"数据统计情况\",\n    \"dataTitleSize\": 20,\n    \"dataTitleColor\": \"#ffffff\",\n    \"dataNameColor\": \"#dddddd\",\n    \"dataValueColor\": \"#dddddd\",\n    \"areaColor\": {\n      \"color1\": \"#0A0909\",\n      \"color2\": \"#3B3737\"\n    },\n    \"grid\": {\n      \"bottom\": 50,\n      \"left\": 75,\n      \"top\": 20\n    },\n    \"inRange\": {\n      \"color\": [\n        \"#04387b\",\n        \"#467bc0\"\n      ]\n    },\n    \"breadcrumb\": {\n      \"drillDown\": false,\n      \"textColor\": \"#ffffff\"\n    }\n  },\n  \"option\": {\n    \"area\": {\n      \"markerCount\": 5,\n      \"shadowBlur\": 10,\n      \"markerOpacity\": 1,\n      \"markerColor\": \"#DDE330\",\n      \"shadowColor\": \"#DDE330\",\n      \"scatterLabelShow\": false,\n      \"markerType\": \"effectScatter\",\n      \"value\": [\n        \"china\"\n      ],\n      \"name\": [\n        \"中国\"\n      ]\n    },\n    \"graphic\": [],\n    \"grid\": {\n      \"show\": false,\n      \"bottom\": 115\n    },\n    \"card\": {\n      \"title\": \"\",\n      \"extra\": \"\",\n      \"rightHref\": \"\",\n      \"size\": \"default\"\n    },\n    \"title\": {\n      \"text\": \"综合统计地图\",\n      \"show\": true,\n      \"left\": 10,\n      \"textStyle\": {\n        \"color\": \"#ffffff\",\n        \"fontSize\": \"22px\"\n      },\n      \"subtextStyle\": {\n        \"color\": \"#ffffff\",\n        \"fontSize\": \"12px\"\n      }\n    },\n    \"legend\": {\n      \"data\": []\n    },\n    \"radar\": [\n      {\n        \"indicator\": []\n      }\n    ],\n    \"timeline\": {\n      \"show\": true,\n      \"axisType\": \"category\",\n      \"autoPlay\": false,\n      \"playInterval\": 2000,\n      \"left\": \"10%\",\n      \"right\": \"5%\",\n      \"bottom\": 5,\n      \"padding\": 5,\n      \"width\": \"80%\",\n      \"label\": {\n        \"normal\": {\n          \"textStyle\": {\n            \"color\": \"#ffffff\"\n          }\n        },\n        \"emphasis\": {\n          \"textStyle\": {\n            \"color\": \"#000000\"\n          }\n        }\n      },\n      \"symbolSize\": 10,\n      \"lineStyle\": {\n        \"color\": \"#555555\"\n      },\n      \"checkpointStyle\": {\n        \"borderColor\": \"#777777\",\n        \"borderWidth\": 2\n      },\n      \"controlStyle\": {\n        \"showNextBtn\": true,\n        \"showPrevBtn\": true,\n        \"normal\": {\n          \"color\": \"#666666\",\n          \"borderColor\": \"#666666\"\n        },\n        \"emphasis\": {\n          \"color\": \"#aaaaaa\",\n          \"borderColor\": \"#aaaaaa\"\n        }\n      }\n    },\n    \"geo\": {\n      \"top\": 80,\n      \"left\": \"3%\",\n      \"show\": true,\n      \"roam\": true,\n      \"zoom\": 0.9,\n      \"label\": {\n        \"emphasis\": {\n          \"show\": false\n        }\n      },\n      \"itemStyle\": {\n        \"normal\": {\n          \"borderColor\": \"#93ebf8\",\n          \"borderWidth\": 1,\n          \"areaColor\": \"\",\n          \"shadowColor\": \"#80d9f8\",\n          \"shadowOffsetX\": -2,\n          \"shadowOffsetY\": 2,\n          \"shadowBlur\": 10\n        },\n        \"emphasis\": {\n          \"areaColor\": \"#EEDD78\",\n          \"borderWidth\": 0\n        }\n      }\n    }\n  }\n}', `status` = '1', `create_by` = NULL, `create_time` = NULL, `update_by` = 'admin', `update_time` = '2022-08-05 11:17:17' WHERE `id` = '100120105';
UPDATE `onl_drag_comp` SET `parent_id` = '100120', `comp_name` = '热力地图', `comp_type` = 'JHeatMap', `icon` = 'carbon:heat-map-02', `order_num` = 1, `type_id` = NULL, `comp_config` = '{\n  \"w\": 12,\n  \"h\": 30,\n  \"dataType\": 1,\n  \"background\": \"#000000\",\n  \"url\": \"http://api.jeecg.com/mock/33/radar\",\n  \"timeOut\": 0,\n      \"dataMapping\": [\n    {\n      \"filed\": \"区域\",\n      \"mapping\": \"\"\n    },\n    {\n      \"filed\": \"数值\",\n      \"mapping\": \"\"\n    }\n  ],\n  \"turnConfig\": {\n    \"url\": \"\"\n  },\n  \"linkageConfig\": [],\n  \"chartData\": [\n    {\n      \"name\": \"海门\",\n      \"value\": 100\n    },\n    {\n      \"name\": \"鄂尔多斯\",\n      \"value\": 112\n    },\n    {\n      \"name\": \"招远\",\n      \"value\": 112\n    },\n    {\n      \"name\": \"舟山\",\n      \"value\": 112\n    },\n    {\n      \"name\": \"齐齐哈尔\",\n      \"value\": 114\n    },\n    {\n      \"name\": \"盐城\",\n      \"value\": 100\n    },\n    {\n      \"name\": \"赤峰\",\n      \"value\": 16\n    },\n    {\n      \"name\": \"青岛\",\n      \"value\": 450\n    },\n    {\n      \"name\": \"乳山\",\n      \"value\": 118\n    },\n    {\n      \"name\": \"金昌\",\n      \"value\": 119\n    },\n    {\n      \"name\": \"泉州\",\n      \"value\": 21\n    },\n    {\n      \"name\": \"莱西\",\n      \"value\": 300\n    },\n    {\n      \"name\": \"日照\",\n      \"value\": 121\n    },\n    {\n      \"name\": \"胶南\",\n      \"value\": 125\n    },\n    {\n      \"name\": \"南通\",\n      \"value\": 23\n    },\n    {\n      \"name\": \"拉萨\",\n      \"value\": 321\n    },\n    {\n      \"name\": \"云浮\",\n      \"value\": 444\n    },\n    {\n      \"name\": \"梅州\",\n      \"value\": 25\n    },\n    {\n      \"name\": \"文登\",\n      \"value\": 456\n    },\n    {\n      \"name\": \"上海\",\n      \"value\": 125\n    },\n    {\n      \"name\": \"攀枝花\",\n      \"value\": 125\n    },\n    {\n      \"name\": \"威海\",\n      \"value\": 25\n    },\n    {\n      \"name\": \"承德\",\n      \"value\": 25\n    },\n    {\n      \"name\": \"厦门\",\n      \"value\": 126\n    },\n    {\n      \"name\": \"汕尾\",\n      \"value\": 26\n    },\n    {\n      \"name\": \"潮州\",\n      \"value\": 247\n    },\n    {\n      \"name\": \"丹东\",\n      \"value\": 227\n    },\n    {\n      \"name\": \"太仓\",\n      \"value\": 427\n    },\n    {\n      \"name\": \"曲靖\",\n      \"value\": 327\n    },\n    {\n      \"name\": \"烟台\",\n      \"value\": 28\n    },\n    {\n      \"name\": \"福州\",\n      \"value\": 29\n    },\n    {\n      \"name\": \"瓦房店\",\n      \"value\": 30\n    },\n    {\n      \"name\": \"即墨\",\n      \"value\": 30\n    },\n    {\n      \"name\": \"抚顺\",\n      \"value\": 31\n    },\n    {\n      \"name\": \"玉溪\",\n      \"value\": 31\n    },\n    {\n      \"name\": \"张家口\",\n      \"value\": 31\n    },\n    {\n      \"name\": \"阳泉\",\n      \"value\": 31\n    },\n    {\n      \"name\": \"莱州\",\n      \"value\": 32\n    },\n    {\n      \"name\": \"湖州\",\n      \"value\": 32\n    },\n    {\n      \"name\": \"汕头\",\n      \"value\": 32\n    },\n    {\n      \"name\": \"昆山\",\n      \"value\": 33\n    },\n    {\n      \"name\": \"宁波\",\n      \"value\": 33\n    },\n    {\n      \"name\": \"湛江\",\n      \"value\": 33\n    },\n    {\n      \"name\": \"揭阳\",\n      \"value\": 34\n    },\n    {\n      \"name\": \"荣成\",\n      \"value\": 34\n    },\n    {\n      \"name\": \"连云港\",\n      \"value\": 35\n    },\n    {\n      \"name\": \"葫芦岛\",\n      \"value\": 35\n    },\n    {\n      \"name\": \"常熟\",\n      \"value\": 236\n    },\n    {\n      \"name\": \"东莞\",\n      \"value\": 336\n    },\n    {\n      \"name\": \"河源\",\n      \"value\": 36\n    },\n    {\n      \"name\": \"淮安\",\n      \"value\": 436\n    },\n    {\n      \"name\": \"泰州\",\n      \"value\": 236\n    },\n    {\n      \"name\": \"南宁\",\n      \"value\": 437\n    },\n    {\n      \"name\": \"营口\",\n      \"value\": 37\n    },\n    {\n      \"name\": \"惠州\",\n      \"value\": 337\n    },\n    {\n      \"name\": \"江阴\",\n      \"value\": 37\n    },\n    {\n      \"name\": \"蓬莱\",\n      \"value\": 37\n    },\n    {\n      \"name\": \"韶关\",\n      \"value\": 38\n    },\n    {\n      \"name\": \"嘉峪关\",\n      \"value\": 38\n    },\n    {\n      \"name\": \"广州\",\n      \"value\": 138\n    },\n    {\n      \"name\": \"延安\",\n      \"value\": 138\n    },\n    {\n      \"name\": \"太原\",\n      \"value\": 139\n    },\n    {\n      \"name\": \"清远\",\n      \"value\": 139\n    },\n    {\n      \"name\": \"中山\",\n      \"value\": 139\n    },\n    {\n      \"name\": \"昆明\",\n      \"value\": 139\n    },\n    {\n      \"name\": \"寿光\",\n      \"value\": 440\n    },\n    {\n      \"name\": \"盘锦\",\n      \"value\": 40\n    },\n    {\n      \"name\": \"长治\",\n      \"value\": 41\n    },\n    {\n      \"name\": \"深圳\",\n      \"value\": 41\n    },\n    {\n      \"name\": \"珠海\",\n      \"value\": 42\n    },\n    {\n      \"name\": \"宿迁\",\n      \"value\": 43\n    },\n    {\n      \"name\": \"咸阳\",\n      \"value\": 43\n    },\n    {\n      \"name\": \"铜川\",\n      \"value\": 44\n    },\n    {\n      \"name\": \"平度\",\n      \"value\": 44\n    },\n    {\n      \"name\": \"佛山\",\n      \"value\": 44\n    },\n    {\n      \"name\": \"海口\",\n      \"value\": 44\n    },\n    {\n      \"name\": \"江门\",\n      \"value\": 45\n    },\n    {\n      \"name\": \"章丘\",\n      \"value\": 45\n    },\n    {\n      \"name\": \"肇庆\",\n      \"value\": 46\n    },\n    {\n      \"name\": \"大连\",\n      \"value\": 47\n    },\n    {\n      \"name\": \"临汾\",\n      \"value\": 47\n    },\n    {\n      \"name\": \"吴江\",\n      \"value\": 47\n    },\n    {\n      \"name\": \"石嘴山\",\n      \"value\": 49\n    },\n    {\n      \"name\": \"沈阳\",\n      \"value\": 50\n    },\n    {\n      \"name\": \"苏州\",\n      \"value\": 50\n    },\n    {\n      \"name\": \"茂名\",\n      \"value\": 50\n    },\n    {\n      \"name\": \"嘉兴\",\n      \"value\": 51\n    },\n    {\n      \"name\": \"长春\",\n      \"value\": 51\n    },\n    {\n      \"name\": \"胶州\",\n      \"value\": 52\n    },\n    {\n      \"name\": \"银川\",\n      \"value\": 52\n    },\n    {\n      \"name\": \"张家港\",\n      \"value\": 52\n    },\n    {\n      \"name\": \"三门峡\",\n      \"value\": 53\n    },\n    {\n      \"name\": \"锦州\",\n      \"value\": 154\n    },\n    {\n      \"name\": \"南昌\",\n      \"value\": 154\n    },\n    {\n      \"name\": \"柳州\",\n      \"value\": 154\n    },\n    {\n      \"name\": \"三亚\",\n      \"value\": 154\n    },\n    {\n      \"name\": \"自贡\",\n      \"value\": 156\n    },\n    {\n      \"name\": \"吉林\",\n      \"value\": 156\n    },\n    {\n      \"name\": \"阳江\",\n      \"value\": 257\n    },\n    {\n      \"name\": \"泸州\",\n      \"value\": 157\n    },\n    {\n      \"name\": \"西宁\",\n      \"value\": 157\n    },\n    {\n      \"name\": \"宜宾\",\n      \"value\": 258\n    },\n    {\n      \"name\": \"呼和浩特\",\n      \"value\": 58\n    },\n    {\n      \"name\": \"成都\",\n      \"value\": 58\n    },\n    {\n      \"name\": \"大同\",\n      \"value\": 58\n    },\n    {\n      \"name\": \"镇江\",\n      \"value\": 59\n    },\n    {\n      \"name\": \"桂林\",\n      \"value\": 59\n    },\n    {\n      \"name\": \"张家界\",\n      \"value\": 59\n    },\n    {\n      \"name\": \"宜兴\",\n      \"value\": 59\n    },\n    {\n      \"name\": \"北海\",\n      \"value\": 60\n    },\n    {\n      \"name\": \"西安\",\n      \"value\": 61\n    },\n    {\n      \"name\": \"金坛\",\n      \"value\": 62\n    },\n    {\n      \"name\": \"东营\",\n      \"value\": 62\n    },\n    {\n      \"name\": \"牡丹江\",\n      \"value\": 63\n    },\n    {\n      \"name\": \"遵义\",\n      \"value\": 63\n    },\n    {\n      \"name\": \"绍兴\",\n      \"value\": 63\n    },\n    {\n      \"name\": \"扬州\",\n      \"value\": 64\n    },\n    {\n      \"name\": \"常州\",\n      \"value\": 64\n    },\n    {\n      \"name\": \"潍坊\",\n      \"value\": 65\n    },\n    {\n      \"name\": \"重庆\",\n      \"value\": 66\n    },\n    {\n      \"name\": \"台州\",\n      \"value\": 67\n    },\n    {\n      \"name\": \"南京\",\n      \"value\": 67\n    },\n    {\n      \"name\": \"滨州\",\n      \"value\": 70\n    },\n    {\n      \"name\": \"贵阳\",\n      \"value\": 71\n    },\n    {\n      \"name\": \"无锡\",\n      \"value\": 71\n    },\n    {\n      \"name\": \"本溪\",\n      \"value\": 71\n    },\n    {\n      \"name\": \"克拉玛依\",\n      \"value\": 72\n    },\n    {\n      \"name\": \"渭南\",\n      \"value\": 72\n    },\n    {\n      \"name\": \"马鞍山\",\n      \"value\": 72\n    },\n    {\n      \"name\": \"宝鸡\",\n      \"value\": 72\n    },\n    {\n      \"name\": \"焦作\",\n      \"value\": 75\n    },\n    {\n      \"name\": \"句容\",\n      \"value\": 75\n    },\n    {\n      \"name\": \"北京\",\n      \"value\": 79\n    },\n    {\n      \"name\": \"徐州\",\n      \"value\": 79\n    },\n    {\n      \"name\": \"衡水\",\n      \"value\": 80\n    },\n    {\n      \"name\": \"包头\",\n      \"value\": 80\n    },\n    {\n      \"name\": \"绵阳\",\n      \"value\": 80\n    },\n    {\n      \"name\": \"乌鲁木齐\",\n      \"value\": 84\n    },\n    {\n      \"name\": \"枣庄\",\n      \"value\": 84\n    },\n    {\n      \"name\": \"杭州\",\n      \"value\": 84\n    },\n    {\n      \"name\": \"淄博\",\n      \"value\": 85\n    },\n    {\n      \"name\": \"鞍山\",\n      \"value\": 86\n    },\n    {\n      \"name\": \"溧阳\",\n      \"value\": 86\n    },\n    {\n      \"name\": \"库尔勒\",\n      \"value\": 86\n    },\n    {\n      \"name\": \"安阳\",\n      \"value\": 190\n    },\n    {\n      \"name\": \"开封\",\n      \"value\": 390\n    },\n    {\n      \"name\": \"济南\",\n      \"value\": 292\n    },\n    {\n      \"name\": \"德阳\",\n      \"value\": 393\n    },\n    {\n      \"name\": \"温州\",\n      \"value\": 95\n    },\n    {\n      \"name\": \"九江\",\n      \"value\": 96\n    },\n    {\n      \"name\": \"邯郸\",\n      \"value\": 98\n    },\n    {\n      \"name\": \"临安\",\n      \"value\": 99\n    },\n    {\n      \"name\": \"兰州\",\n      \"value\": 99\n    },\n    {\n      \"name\": \"沧州\",\n      \"value\": 100\n    },\n    {\n      \"name\": \"临沂\",\n      \"value\": 103\n    },\n    {\n      \"name\": \"南充\",\n      \"value\": 104\n    },\n    {\n      \"name\": \"天津\",\n      \"value\": 105\n    },\n    {\n      \"name\": \"富阳\",\n      \"value\": 106\n    },\n    {\n      \"name\": \"泰安\",\n      \"value\": 112\n    },\n    {\n      \"name\": \"诸暨\",\n      \"value\": 112\n    },\n    {\n      \"name\": \"郑州\",\n      \"value\": 113\n    },\n    {\n      \"name\": \"哈尔滨\",\n      \"value\": 114\n    },\n    {\n      \"name\": \"聊城\",\n      \"value\": 116\n    },\n    {\n      \"name\": \"芜湖\",\n      \"value\": 117\n    },\n    {\n      \"name\": \"唐山\",\n      \"value\": 119\n    },\n    {\n      \"name\": \"平顶山\",\n      \"value\": 119\n    },\n    {\n      \"name\": \"邢台\",\n      \"value\": 119\n    },\n    {\n      \"name\": \"德州\",\n      \"value\": 120\n    },\n    {\n      \"name\": \"济宁\",\n      \"value\": 120\n    },\n    {\n      \"name\": \"荆州\",\n      \"value\": 127\n    },\n    {\n      \"name\": \"宜昌\",\n      \"value\": 130\n    },\n    {\n      \"name\": \"义乌\",\n      \"value\": 132\n    },\n    {\n      \"name\": \"丽水\",\n      \"value\": 133\n    },\n    {\n      \"name\": \"洛阳\",\n      \"value\": 134\n    },\n    {\n      \"name\": \"秦皇岛\",\n      \"value\": 136\n    },\n    {\n      \"name\": \"株洲\",\n      \"value\": 143\n    },\n    {\n      \"name\": \"石家庄\",\n      \"value\": 147\n    },\n    {\n      \"name\": \"莱芜\",\n      \"value\": 148\n    },\n    {\n      \"name\": \"常德\",\n      \"value\": 152\n    },\n    {\n      \"name\": \"保定\",\n      \"value\": 153\n    },\n    {\n      \"name\": \"湘潭\",\n      \"value\": 154\n    },\n    {\n      \"name\": \"金华\",\n      \"value\": 157\n    },\n    {\n      \"name\": \"岳阳\",\n      \"value\": 169\n    },\n    {\n      \"name\": \"长沙\",\n      \"value\": 175\n    },\n    {\n      \"name\": \"衢州\",\n      \"value\": 177\n    },\n    {\n      \"name\": \"廊坊\",\n      \"value\": 193\n    },\n    {\n      \"name\": \"菏泽\",\n      \"value\": 194\n    },\n    {\n      \"name\": \"合肥\",\n      \"value\": 229\n    },\n    {\n      \"name\": \"武汉\",\n      \"value\": 273\n    },\n    {\n      \"name\": \"大庆\",\n      \"value\": 279\n    }\n  ],\n  \"commonOption\": {\n    \"barSize\": 10,\n    \"barColor\": \"#D6F263\",\n    \"barColor2\": \"#A3DB6B\",\n    \"gradientColor\": false,\n    \"areaColor\": {\n      \"color1\": \"#f7f7f7\",\n      \"color2\": \"#3B3737\"\n    },\n    \"heat\": {\n      \"pointSize\": 15,\n      \"blurSize\": 20,\n      \"maxOpacity\": 1\n    },\n    \"inRange\": {\n      \"color\": [\n        \"#E08D8D\",\n        \"#ff9800\"\n      ]\n    },\n    \"breadcrumb\": {\n      \"drillDown\": false,\n      \"textColor\": \"#ffffff\"\n    }\n  },\n  \"option\": {\n    \"drillDown\": false,\n    \"area\": {\n      \"markerCount\": 5,\n      \"shadowBlur\": 10,\n      \"markerOpacity\": 1,\n      \"markerColor\": \"#df2425\",\n      \"shadowColor\": \"#DDE330\",\n      \"scatterLabelShow\": false,\n      \"markerType\": \"effectScatter\",\n      \"value\": [\n        \"china\"\n      ],\n      \"name\": [\n        \"中国\"\n      ]\n    },\n    \"graphic\": [],\n    \"grid\": {\n      \"show\": false,\n      \"bottom\": 115\n    },\n    \"card\": {\n      \"title\": \"\",\n      \"extra\": \"\",\n      \"rightHref\": \"\",\n      \"size\": \"default\"\n    },\n    \"title\": {\n      \"text\": \"\",\n      \"left\": 10,\r\n			\"textStyle\":{\r\n			  \"fontWeight\":\"normal\"\r\n			},\n      \"show\": true\n    },\n    \"legend\": {\n      \"data\": []\n    },\n    \"visualMap\": {\n      \"show\": true,\n      \"min\": 0,\n      \"type\": \"continuous\",\n      \"max\": 200,\n      \"left\": \"5%\",\n      \"top\": \"bottom\",\n      \"calculable\": true,\n      \"seriesIndex\": [\n        1\n      ]\n    },\n    \"geo\": {\n      \"top\": 30,\n      \"label\": {\n        \"emphasis\": {\n          \"show\": false,\n          \"color\": \"#fff\"\n        }\n      },\n      \"roam\": true,\n      \"zoom\": 1,\n      \"itemStyle\": {\n        \"normal\": {\n          \"borderColor\": \"#a9a9a9\",\n          \"borderWidth\": 1,\n          \"areaColor\": \"\",\n          \"shadowColor\": \"#80d9f8\",\n          \"shadowOffsetX\": 0,\n          \"shadowOffsetY\": 0,\n          \"shadowBlur\": 0\n        },\n        \"emphasis\": {\n          \"areaColor\": \"#fff59c\",\n          \"borderWidth\": 0\n        }\n      }\n    }\n  }\n}', `status` = '1', `create_by` = NULL, `create_time` = NULL, `update_by` = 'admin', `update_time` = '2022-08-05 11:17:24' WHERE `id` = '100120106';
UPDATE `onl_drag_comp` SET `parent_id` = '100', `comp_name` = '按钮', `comp_type` = 'JRadioButton', `icon` = 'mdi:gesture-tap-button', `order_num` = 15, `type_id` = NULL, `comp_config` = '{\r\n    \"w\": 12,\r\n    \"h\": 12,\r\n    \"dataType\": 1,\r\n    \"url\": \"\",\r\n    \"timeOut\": 0,\r\n    \"linkageConfig\": [],\r\n    \"chartData\": [\r\n        {\r\n            \"title\": \"按钮一\",\r\n            \"value\": 0,\r\n            \"href\": \"\",\r\n            \"data\": {}\r\n        },\r\n        {\r\n            \"title\": \"按钮二\",\r\n            \"value\": 1,\r\n            \"href\": \"\",\r\n            \"data\": {}\r\n        },\r\n        {\r\n            \"title\": \"按钮三\",\r\n            \"value\": 2,\r\n            \"href\": \"\",\r\n            \"data\": {}\r\n        },\r\n        {\r\n            \"title\": \"按钮四\",\r\n            \"value\": 3,\r\n            \"href\": \"\",\r\n            \"data\": {}\r\n        },\r\n        {\r\n            \"title\": \"按钮五\",\r\n            \"value\": 4,\r\n            \"href\": \"\",\r\n            \"data\": {}\r\n        }\r\n    ],\r\n    \"option\": {\r\n        \"title\": \"按钮\",\r\n        \"body\": {\r\n            \"size\": \"small\",\r\n            \"spaceSize\": 20,\r\n            \"shape\": \"circle\"\r\n        },\r\n        \"customColor\": [\r\n            {\r\n                \"color\": \"#1A7DED\"\r\n            },\r\n            {\r\n                \"color\": \"#F8E71C\"\r\n            },\r\n            {\r\n                \"color\": \"#B8E986\"\r\n            },\r\n            {\r\n                \"color\": \"#50E3C2\"\r\n            }\r\n        ]\r\n    }\r\n}', `status` = '1', `create_by` = NULL, `create_time` = NULL, `update_by` = 'admin', `update_time` = '2022-04-29 10:53:49' WHERE `id` = '100111';
UPDATE `onl_drag_comp` SET `parent_id` = '100', `comp_name` = '自定义查询' WHERE `id` = '100100';
UPDATE `onl_drag_comp` SET `parent_id` = '100', `comp_name` = '查询条件' WHERE `id` = '100100';


-- 积木报表升级到1.8.1版本--
ALTER TABLE jimu_report
    ADD COLUMN update_count int NULL DEFAULT 0 COMMENT '乐观锁版本' AFTER tenant_id;
update jimu_report set update_count = 0 where update_count is null;

ALTER TABLE jimu_report
    ADD COLUMN `submit_form` tinyint(1) NULL COMMENT '是否填报报表 0不是,1是' ;
ALTER TABLE jimu_report
    MODIFY COLUMN type varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '类型' AFTER status;
CREATE TABLE `jimu_report_category`  (
                                         `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '主键',
                                         `name` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '分类名称',
                                         `parent_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '父级id',
                                         `iz_leaf` int(1) NULL DEFAULT NULL COMMENT '是否为叶子节点(0 否 1是)',
                                         `source_type` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '来源类型( report 积木报表 screen 大屏  drag 仪表盘)',
                                         `del_flag` int(1) NULL DEFAULT NULL COMMENT '删除标识(0 正常 1 已删除)',
                                         `create_by` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '创建人',
                                         `create_time` timestamp NULL DEFAULT NULL COMMENT '创建时间',
                                         `update_by` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '更新人',
                                         `update_time` timestamp NULL DEFAULT NULL COMMENT '更新时间',
                                         `tenant_id` varchar(11) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '租户id',
                                         PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '分类' ROW_FORMAT = Dynamic;

INSERT INTO jimu_report_category (id, name, parent_id, iz_leaf, source_type, del_flag, create_by, create_time, update_by, update_time, tenant_id) VALUES ('984272091947253760', '数据报表', '0', 1, 'report', 0, 'admin', '2024-08-16 11:52:44', NULL, NULL, '1000');
INSERT INTO jimu_report_category (id, name, parent_id, iz_leaf, source_type, del_flag, create_by, create_time, update_by, update_time, tenant_id) VALUES ('984302961118724096', '图形报表', '0', 1, 'report', 0, 'admin', '2024-08-16 13:55:24', NULL, NULL, '1000');
INSERT INTO jimu_report_category (id, name, parent_id, iz_leaf, source_type, del_flag, create_by, create_time, update_by, update_time, tenant_id) VALUES ('984302991393210368', '打印设计', '0', 1, 'report', 0, 'admin', '2024-08-16 13:55:31', NULL, NULL, '1000');
update jimu_report set type = '984302991393210368' where type = 'printinfo';
update jimu_report set type = '984272091947253760' where type = 'datainfo';
update jimu_report set type = '984302961118724096' where type = 'chartinfo';
INSERT INTO `jimu_dict` (`id`, `dict_name`, `dict_code`, `description`, `del_flag`, `create_by`, `create_time`, `update_by`, `update_time`, `type`, `tenant_id`) VALUES ('986779503584169984', '民族', 'minzu', '', 0, 'admin', '2024-08-23 09:56:17', NULL, NULL, NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986779561591394304', '986779503584169984', '汉族', 'hanzu', NULL, 1, 1, 'admin', '2024-08-23 09:56:31', 'admin', '2024-08-23 09:56:45');
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986779602800431104', '986779503584169984', '回族', 'huizu', NULL, 1, 1, 'admin', '2024-08-23 09:56:41', NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986779663689142272', '986779503584169984', '维吾尔族', 'weiwuer', NULL, 1, 1, 'admin', '2024-08-23 09:56:56', NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986779697352626176', '986779503584169984', '藏族', 'zangzu', NULL, 1, 1, 'admin', '2024-08-23 09:57:04', NULL, NULL);
INSERT INTO `jimu_dict` (`id`, `dict_name`, `dict_code`, `description`, `del_flag`, `create_by`, `create_time`, `update_by`, `update_time`, `type`, `tenant_id`) VALUES ('986783181955223552', '学历', 'xueli_sf', '', 0, 'admin', '2024-08-23 10:10:54', NULL, NULL, NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986783239996002304', '986783181955223552', '文盲', '0', NULL, 1, 1, 'admin', '2024-08-23 10:11:08', NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986783271616860160', '986783181955223552', '小学', '1', NULL, 1, 1, 'admin', '2024-08-23 10:11:16', NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986783303967526912', '986783181955223552', '初中', '2', NULL, 1, 1, 'admin', '2024-08-23 10:11:23', NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986783326532882432', '986783181955223552', '高中', '3', NULL, 1, 1, 'admin', '2024-08-23 10:11:29', NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986783354462752768', '986783181955223552', '专科', '4', NULL, 1, 1, 'admin', '2024-08-23 10:11:35', NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986783373504892928', '986783181955223552', '本科', '5', NULL, 1, 1, 'admin', '2024-08-23 10:11:40', NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986783415494070272', '986783181955223552', '研究生', '6', NULL, 1, 1, 'admin', '2024-08-23 10:11:50', NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986783438734708736', '986783181955223552', '博士', '7', NULL, 1, 1, 'admin', '2024-08-23 10:11:56', NULL, NULL);
INSERT INTO `jimu_dict` (`id`, `dict_name`, `dict_code`, `description`, `del_flag`, `create_by`, `create_time`, `update_by`, `update_time`, `type`, `tenant_id`) VALUES ('986784113082322944', '爱好', 'aihao', '', 0, 'admin', '2024-08-23 10:14:36', NULL, NULL, NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986784154379440128', '986784113082322944', '音乐', '0', NULL, 1, 1, 'admin', '2024-08-23 10:14:46', NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986784179134222336', '986784113082322944', '运动', '1', NULL, 1, 1, 'admin', '2024-08-23 10:14:52', NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986784205717721088', '986784113082322944', '舞蹈', '2', NULL, 1, 1, 'admin', '2024-08-23 10:14:58', NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986784229390372864', '986784113082322944', '棋牌', '3', NULL, 1, 1, 'admin', '2024-08-23 10:15:04', NULL, NULL);
INSERT INTO `jimu_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('986784260960899072', '986784113082322944', '电竞', '4', NULL, 1, 1, 'admin', '2024-08-23 10:15:12', NULL, NULL);
INSERT INTO `jimu_report` (`id`, `code`, `name`, `note`, `status`, `type`, `json_str`, `api_url`, `thumb`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `api_method`, `api_code`, `template`, `view_count`, `css_str`, `js_str`, `py_str`, `tenant_id`, `update_count`, `submit_form`) VALUES ('989065112487022592', '20240823093133__1750', '在线填报-员工信息登记', NULL, NULL, 'datainfo', '{\"loopBlockList\":[],\"querySetting\":{\"izOpenQueryBar\":false,\"izDefaultQuery\":true},\"printConfig\":{\"paper\":\"A4\",\"width\":210,\"height\":297,\"definition\":1,\"isBackend\":false,\"marginX\":10,\"marginY\":10,\"layout\":\"portrait\",\"printCallBackUrl\":\"\"},\"hidden\":{\"rows\":[],\"cols\":[]},\"dbexps\":[],\"dicts\":[],\"freeze\":\"A1\",\"dataRectWidth\":698,\"autofilter\":{},\"validations\":[],\"cols\":{\"0\":{\"width\":76},\"1\":{\"width\":114},\"2\":{\"width\":87},\"3\":{\"width\":99},\"4\":{\"width\":65},\"5\":{\"width\":126},\"6\":{\"width\":131},\"len\":100},\"area\":{\"sri\":10,\"sci\":9,\"eri\":10,\"eci\":9,\"width\":100,\"height\":121},\"pyGroupEngine\":false,\"submitHandlers\":[{\"type\":\"api\",\"code\":\"api\",\"name\":\"api\",\"isMain\":true,\"isEdit\":true,\"apiUrl\":\"https://bootapi.jeecg.com/jmreport/test/submit/handle\"}],\"excel_config_id\":\"989065112487022592\",\"hiddenCells\":[],\"zonedEditionList\":[],\"rows\":{\"0\":{\"cells\":{\"0\":{\"merge\":[1,6],\"height\":90,\"text\":\"员工信息登记表\",\"style\":6}},\"height\":45},\"1\":{\"cells\":{},\"height\":45},\"2\":{\"cells\":{\"0\":{\"text\":\"编号\",\"style\":7,\"fillFormLabel\":\"*\"},\"1\":{\"fillForm\":{\"componentFlag\":\"input-text\",\"component\":\"Input\",\"field\":\"no\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"pattern\":\"\",\"patternErrorTip\":\"\"},\"style\":7,\"text\":\" \"},\"2\":{\"text\":\"年龄\",\"style\":7},\"3\":{\"fillForm\":{\"componentFlag\":\"InputNumber\",\"component\":\"InputNumber\",\"field\":\"age\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"label\":\"\",\"labelText\":\"\",\"precision\":0,\"isLimitMinNum\":false,\"minNum\":0,\"isLimitMaxNum\":false,\"maxNum\":100,\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"age\"}]},\"style\":7,\"text\":\" \"},\"4\":{\"text\":\"填写时间\",\"style\":7},\"5\":{\"fillForm\":{\"componentFlag\":\"DatePicker-time\",\"component\":\"DatePicker\",\"field\":\"create_time\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"label\":\"\",\"labelText\":\"\",\"dateFormat\":\"yyyy-MM-dd HH:mm:ss\",\"defaultValue\":\"\"},\"style\":7,\"text\":\" \"},\"6\":{\"merge\":[3,0],\"height\":180,\"fillForm\":{\"componentFlag\":\"JUploadImage\",\"component\":\"JUploadImage\",\"field\":\"photo\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"multiple\":false,\"maxUploadNum\":1,\"h_align\":\"center\"},\"style\":7,\"text\":\" \"}},\"height\":45},\"3\":{\"cells\":{\"0\":{\"text\":\"姓名\",\"style\":7,\"fillFormLabel\":\"*\"},\"1\":{\"text\":\" \",\"fillForm\":{\"componentFlag\":\"input-text\",\"component\":\"Input\",\"field\":\"name\",\"placeholder\":\"\",\"required\":true,\"requiredTip\":\"不能为空~\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"name\"},{\"dbTable\":\"test_form_submit1\",\"dbField\":\"name\"}],\"label\":\"A5\",\"labelText\":\"姓名\",\"pattern\":\"\",\"patternErrorTip\":\"\"}},\"2\":{\"text\":\"性别\",\"style\":7},\"3\":{\"fillForm\":{\"componentFlag\":\"JRadio\",\"component\":\"JRadio\",\"field\":\"sex\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dataSource\":\"dict\",\"options\":[{\"label\":\"男\",\"value\":\"1\"},{\"label\":\"女\",\"value\":\"2\"}],\"apiUrl\":\"\",\"dictCode\":\"sex1\",\"dictName\":\"性别\"},\"style\":8,\"text\":\" \"},\"4\":{\"text\":\"出生日期\",\"style\":7},\"5\":{\"fillForm\":{\"componentFlag\":\"DatePicker-date\",\"component\":\"DatePicker\",\"field\":\"brithday\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dateFormat\":\"yyyy-MM-dd\",\"dateShowType\":\"date\"},\"style\":7,\"text\":\" \"},\"8\":{}},\"height\":45},\"4\":{\"cells\":{\"0\":{\"text\":\"民族\",\"style\":7,\"fillFormLabel\":\"*\"},\"1\":{\"fillForm\":{\"componentFlag\":\"JSelect\",\"component\":\"JSelect\",\"field\":\"nation\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dataSource\":\"dict\",\"options\":[{\"label\":\"选项1\",\"value\":\"1\"},{\"label\":\"选项2\",\"value\":\"2\"},{\"label\":\"选项3\",\"value\":\"3\"}],\"apiUrl\":\"\",\"dictCode\":\"minzu\",\"dictName\":\"民族\",\"multiple\":\"\"},\"style\":7,\"text\":\" \"},\"2\":{\"text\":\"政治面貌\",\"style\":7},\"3\":{\"fillForm\":{\"componentFlag\":\"JSelect\",\"component\":\"JSelect\",\"field\":\"politics\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"politics\"}],\"dataSource\":\"api\",\"options\":[{\"label\":\"选项1\",\"value\":\"1\"},{\"label\":\"选项2\",\"value\":\"2\"},{\"label\":\"选项3\",\"value\":\"3\"}],\"apiUrl\":\"https://bootapi.jeecg.com/jmreport/test/submit/dict/political\",\"dictCode\":\"\",\"dictName\":\"\",\"multiple\":\"\"},\"style\":7,\"text\":\" \"},\"4\":{\"text\":\"籍贯\",\"style\":7},\"5\":{\"fillForm\":{\"componentFlag\":\"JAreaLinkage\",\"component\":\"JAreaLinkage\",\"field\":\"native_place\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"native_place\"}],\"areaType\":\"region\"},\"style\":7,\"text\":\" \"}},\"height\":45},\"5\":{\"cells\":{\"0\":{\"text\":\"身高（cm)\",\"style\":7},\"1\":{\"fillForm\":{\"componentFlag\":\"InputNumber\",\"component\":\"InputNumber\",\"field\":\"height\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"height\"}],\"precision\":2,\"isLimitMinNum\":false,\"minNum\":50,\"isLimitMaxNum\":false,\"maxNum\":200},\"style\":7,\"text\":\" \"},\"2\":{\"text\":\"体重\",\"style\":7},\"3\":{\"fillForm\":{\"componentFlag\":\"InputNumber\",\"component\":\"InputNumber\",\"field\":\"weight\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"weight\"}],\"precision\":2,\"isLimitMinNum\":false,\"minNum\":30,\"isLimitMaxNum\":false,\"maxNum\":300},\"style\":7,\"text\":\" \"},\"4\":{\"text\":\"健康状况\",\"style\":7},\"5\":{\"fillForm\":{\"componentFlag\":\"JSelect\",\"component\":\"JSelect\",\"field\":\"health\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dataSource\":\"static\",\"options\":[{\"label\":\"健康\",\"value\":\"1\"},{\"label\":\"不健康\",\"value\":\"2\"}],\"apiUrl\":\"\",\"dictCode\":\"\",\"dictName\":\"\",\"multiple\":\"\"},\"style\":7,\"text\":\" \"}},\"height\":45},\"6\":{\"cells\":{\"0\":{\"text\":\"身份证号\",\"style\":7},\"1\":{\"merge\":[0,2],\"height\":45,\"fillForm\":{\"componentFlag\":\"input-text\",\"component\":\"Input\",\"field\":\"idcard\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"pattern\":\"^\\\\d{17}[\\\\dX]$\",\"patternErrorTip\":\"请输入身份证号\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"id_card\"}]},\"style\":7,\"text\":\" \"},\"4\":{\"text\":\"学历\",\"style\":7},\"5\":{\"fillForm\":{\"componentFlag\":\"JSelect\",\"component\":\"JSelect\",\"field\":\"people\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dataSource\":\"dict\",\"options\":[{\"label\":\"选项1\",\"value\":\"1\"},{\"label\":\"选项2\",\"value\":\"2\"},{\"label\":\"选项3\",\"value\":\"3\"}],\"apiUrl\":\"\",\"dictCode\":\"xueli_sf\",\"dictName\":\"学历\",\"multiple\":true},\"style\":7,\"text\":\" \",\"merge\":[0,1],\"height\":45}},\"height\":45},\"7\":{\"cells\":{\"0\":{\"text\":\"联系地址\",\"style\":7},\"1\":{\"fillForm\":{\"componentFlag\":\"input-text\",\"component\":\"Input\",\"field\":\"addr\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"address\"}],\"pattern\":\"\",\"patternErrorTip\":\"\"},\"merge\":[0,2],\"height\":45,\"style\":7,\"text\":\" \"},\"4\":{\"text\":\"手机号\",\"style\":7},\"5\":{\"fillForm\":{\"componentFlag\":\"input-text\",\"component\":\"Input\",\"field\":\"phone\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"phone\"}],\"pattern\":\"\",\"patternErrorTip\":\"\"},\"style\":7,\"text\":\" \",\"merge\":[0,1],\"height\":45}},\"height\":45},\"8\":{\"cells\":{\"0\":{\"text\":\"毕业证书\",\"style\":7},\"1\":{\"merge\":[0,2],\"height\":45,\"fillForm\":{\"componentFlag\":\"JUploadFile\",\"component\":\"JUploadFile\",\"field\":\"ca\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"multiple\":false,\"maxUploadNum\":1,\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"ca\"}]},\"style\":9,\"text\":\" \"},\"4\":{\"text\":\"幸运色\",\"style\":7},\"5\":{\"fillForm\":{\"componentFlag\":\"ColorPicker\",\"component\":\"ColorPicker\",\"field\":\"lucky_color\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"alpha\":false},\"style\":7,\"text\":\" \",\"merge\":[0,1],\"height\":45}},\"height\":45},\"9\":{\"cells\":{\"0\":{\"text\":\"教育经历\",\"merge\":[0,6],\"height\":45,\"style\":8}},\"height\":45},\"10\":{\"cells\":{\"0\":{\"merge\":[0,6],\"height\":121,\"fillForm\":{\"componentFlag\":\"input-textarea\",\"component\":\"Input\",\"field\":\"education\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"education\"}],\"pattern\":\"\",\"patternErrorTip\":\"\"},\"style\":7,\"text\":\" \"}},\"height\":121},\"11\":{\"cells\":{\"0\":{\"text\":\"工作经历\",\"merge\":[0,6],\"height\":45,\"style\":8}},\"height\":45},\"12\":{\"cells\":{\"0\":{\"merge\":[0,6],\"height\":150,\"fillForm\":{\"componentFlag\":\"input-textarea\",\"component\":\"Input\",\"field\":\"work_exp\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"work_exp\"}],\"pattern\":\"\",\"patternErrorTip\":\"\"},\"style\":7,\"text\":\" \"}},\"height\":150},\"13\":{\"cells\":{\"0\":{\"text\":\"爱好\",\"style\":7},\"1\":{\"merge\":[0,5],\"height\":45,\"fillForm\":{\"componentFlag\":\"JCheckbox\",\"component\":\"JCheckbox\",\"field\":\"fruity\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"fruity\"}],\"dataSource\":\"dict\",\"options\":[{\"label\":\"选项1\",\"value\":\"1\"},{\"label\":\"选项2\",\"value\":\"2\"},{\"label\":\"选项3\",\"value\":\"3\"}],\"apiUrl\":\"\",\"dictCode\":\"aihao\",\"dictName\":\"爱好\"},\"style\":7,\"text\":\" \"}},\"height\":45},\"14\":{\"cells\":{\"0\":{\"text\":\"所属部门\",\"style\":7},\"1\":{\"fillForm\":{\"componentFlag\":\"JDepartment\",\"component\":\"JDepartment\",\"field\":\"dept\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"dept\"}],\"multiple\":true,\"apiUrl\":\"http://192.168.1.69:8086/jmreport/test/getDepartmentList\"},\"merge\":[0,2],\"height\":45,\"style\":7,\"text\":\" \"},\"4\":{\"text\":\"薪资\",\"style\":7},\"5\":{\"fillForm\":{\"componentFlag\":\"JMoney\",\"component\":\"JMoney\",\"field\":\"pay\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"label\":\"\",\"labelText\":\"\",\"precision\":0,\"addon\":\"prepend\",\"moenyUnit\":\"￥\"},\"style\":7,\"text\":\" \",\"merge\":[0,1],\"height\":45}},\"height\":45},\"15\":{\"cells\":{\"0\":{\"text\":\"角色\",\"style\":7},\"1\":{\"merge\":[0,2],\"height\":45,\"fillForm\":{\"componentFlag\":\"JRole\",\"component\":\"JRole\",\"field\":\"role\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"multiple\":false,\"apiUrl\":\"https://bootapi.jeecg.com/jmreport/test/getRoleList\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"role\"}]},\"style\":7,\"text\":\" \"},\"4\":{\"style\":7,\"text\":\"工位\"},\"5\":{\"style\":7,\"text\":\" \",\"merge\":[0,1],\"height\":45,\"fillForm\":{\"componentFlag\":\"JSelect\",\"component\":\"JSelect\",\"field\":\"station\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"label\":\"\",\"labelText\":\"\",\"dataSource\":\"static\",\"options\":[{\"label\":\"101\",\"value\":\"1\"},{\"label\":\"102\",\"value\":\"2\"},{\"label\":\"103\",\"value\":\"3\"},{\"label\":\"104\",\"value\":\"4\"}],\"apiUrl\":\"\",\"dictCode\":\"\",\"dictName\":\"\",\"multiple\":true}}},\"height\":45},\"16\":{\"cells\":{\"0\":{\"text\":\"直属领导\",\"style\":7},\"1\":{\"fillForm\":{\"componentFlag\":\"JUser\",\"component\":\"JUser\",\"field\":\"leader\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"multiple\":false,\"apiUrl\":\"https://bootapi.jeecg.com/jmreport/test/getUserList\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"leader\"}]},\"merge\":[0,2],\"height\":45,\"style\":7,\"text\":\" \"},\"4\":{\"style\":7,\"text\":\"是否启用\"},\"5\":{\"style\":10,\"text\":\" \",\"merge\":[0,1],\"height\":45,\"fillForm\":{\"componentFlag\":\"JSwitch\",\"component\":\"JSwitch\",\"field\":\"status\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"dbFieldBind\":[{\"dbTable\":\"test_form_submit\",\"dbField\":\"status\"}],\"label\":\"\",\"labelText\":\"\",\"switchOpen\":\"Y\",\"switchClose\":\"N\",\"h_align\":\"center\"}},\"6\":{}},\"height\":45},\"17\":{\"cells\":{\"0\":{\"style\":7,\"text\":\"负责部门\"},\"1\":{\"fillForm\":{\"componentFlag\":\"JSelectTree\",\"component\":\"JSelectTree\",\"field\":\"responsible\",\"value\":\"\",\"defaultValue\":\"\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"multiple\":true,\"apiUrl\":\"https://bootapi.jeecg.com/jmreport/test/getDepartmentList\"},\"style\":7,\"text\":\" \",\"merge\":[0,2],\"height\":45},\"4\":{\"style\":7,\"text\":\"上班时间\"},\"5\":{\"style\":7,\"text\":\" \",\"merge\":[0,1],\"height\":45,\"fillForm\":{\"componentFlag\":\"TimePicker\",\"component\":\"TimePicker\",\"field\":\"key_1724408224853_326455\",\"placeholder\":\"\",\"required\":false,\"requiredTip\":\"不能为空~\",\"label\":\"\",\"labelText\":\"\",\"isRangTime\":false,\"timeType\":\"time\"}}},\"height\":45},\"20\":{\"cells\":{\"6\":{}}},\"len\":201},\"rpbar\":{\"show\":true,\"pageSize\":\"\",\"btnList\":[]},\"fixedPrintHeadRows\":[],\"fixedPrintTailRows\":[],\"displayConfig\":{},\"background\":false,\"name\":\"sheet1\",\"styles\":[{\"align\":\"center\"},{\"align\":\"center\",\"valign\":\"middle\"},{\"align\":\"center\",\"valign\":\"middle\",\"font\":{\"size\":16}},{\"font\":{\"size\":16}},{\"align\":\"center\",\"valign\":\"middle\",\"font\":{\"size\":16,\"bold\":true}},{\"font\":{\"size\":16,\"bold\":true}},{\"align\":\"center\",\"valign\":\"middle\",\"font\":{\"size\":16,\"bold\":true},\"border\":{\"bottom\":[\"thin\",\"#000\"],\"top\":[\"thin\",\"#000\"],\"left\":[\"thin\",\"#000\"],\"right\":[\"thin\",\"#000\"]}},{\"border\":{\"bottom\":[\"thin\",\"#000\"],\"top\":[\"thin\",\"#000\"],\"left\":[\"thin\",\"#000\"],\"right\":[\"thin\",\"#000\"]}},{\"align\":\"center\",\"border\":{\"bottom\":[\"thin\",\"#000\"],\"top\":[\"thin\",\"#000\"],\"left\":[\"thin\",\"#000\"],\"right\":[\"thin\",\"#000\"]}},{\"align\":\"center\",\"border\":{\"bottom\":[\"thin\",\"#000\"],\"top\":[\"thin\",\"#000\"],\"left\":[\"thin\",\"#000\"],\"right\":[\"thin\",\"#000\"]},\"valign\":\"middle\"},{\"align\":\"right\",\"border\":{\"bottom\":[\"thin\",\"#000\"],\"top\":[\"thin\",\"#000\"],\"left\":[\"thin\",\"#000\"],\"right\":[\"thin\",\"#000\"]}}],\"freezeLineColor\":\"rgb(185, 185, 185)\",\"merges\":[\"A1:G2\",\"G3:G6\",\"B7:D7\",\"F7:G7\",\"B8:D8\",\"F8:G8\",\"B9:D9\",\"F9:G9\",\"A10:G10\",\"A11:G11\",\"A12:G12\",\"A13:G13\",\"B14:G14\",\"B15:D15\",\"F15:G15\",\"B16:D16\",\"F16:G16\",\"B17:D17\",\"F17:G17\",\"B18:D18\",\"F18:G18\"]}', NULL, NULL, 'admin', '2024-08-29 17:18:29', 'admin', '2024-08-30 10:24:03', 0, NULL, NULL, 1, 2, NULL, NULL, NULL, '1', 9, 1);
INSERT INTO `jimu_report_share` (`id`, `report_id`, `preview_url`, `preview_lock`, `last_update_time`, `term_of_validity`, `status`, `preview_lock_status`, `SHARE_TOKEN`) VALUES ('989322818603012096', '989065112487022592', '/jmreport/shareView/989065112487022592', '', '2024-08-30 10:22:31', '1', '0', '0', '71e3778ba7ebeae4652d2e53c46a7b1b');

-- 积木报表表小改动
UPDATE jimu_report_db_field SET search_mode = 3 WHERE id = '8fb53733d1fb32d21d2bc2b3c0178c73';
INSERT INTO `jimu_report` (`id`, `code`, `name`, `note`, `status`, `type`, `json_str`, `api_url`, `thumb`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `api_method`, `api_code`, `template`, `view_count`, `css_str`, `js_str`, `py_str`, `tenant_id`) VALUES ('975549294469992448', '20240723101422', '简单表达式混合运算', NULL, NULL, 'datainfo', '{\"loopBlockList\":[],\"printConfig\":{\"paper\":\"A4\",\"width\":210,\"height\":297,\"definition\":1,\"isBackend\":false,\"marginX\":10,\"marginY\":10,\"layout\":\"portrait\",\"printCallBackUrl\":\"\"},\"hidden\":{\"rows\":[],\"cols\":[]},\"dbexps\":[],\"dicts\":[],\"freeze\":\"A1\",\"dataRectWidth\":1097,\"autofilter\":{},\"validations\":[],\"cols\":{\"0\":{\"width\":81},\"1\":{\"width\":55},\"2\":{\"width\":144},\"3\":{\"width\":143},\"4\":{\"width\":112},\"5\":{\"width\":129},\"7\":{\"width\":333},\"len\":100},\"area\":false,\"pyGroupEngine\":false,\"excel_config_id\":\"975549294469992448\",\"hiddenCells\":[],\"zonedEditionList\":[],\"rows\":{\"0\":{\"cells\":{\"0\":{\"text\":\"1\"},\"1\":{},\"2\":{\"text\":\"SUM(A1,A2)\"},\"3\":{\"text\":\"=SUM(A1,A2)\"},\"4\":{\"text\":\"SUM(A1:A10)\"},\"5\":{\"text\":\"=SUM(A1:A10)\"}}},\"1\":{\"cells\":{\"0\":{\"text\":\"2\"},\"1\":{},\"2\":{\"text\":\"SUM(A1,A2)*2\"},\"3\":{\"text\":\"=SUM(A1,A2)*2\"},\"4\":{\"text\":\"SUM(A1:A10)*2\"},\"5\":{\"text\":\"=SUM(A1:A10)*2\"},\"6\":{},\"7\":{\"text\":\"=2+SUM(A1,A2)*2 \"}}},\"2\":{\"cells\":{\"0\":{\"text\":\"3\"},\"2\":{\"text\":\"SUM(A1,A2)/2\"},\"3\":{\"text\":\"=SUM(A1,A2)/2\"},\"4\":{\"text\":\"SUM(A1:A10)/2\"},\"5\":{\"text\":\"=SUM(A1:A10)/2\"},\"7\":{\"text\":\"=A1*A2\"}}},\"3\":{\"cells\":{\"0\":{\"text\":\"4\"},\"2\":{\"text\":\"SUM(A1,A2)+2\"},\"3\":{\"text\":\"=SUM(A1,A2)+2\"},\"4\":{\"text\":\"SUM(A1:A10)+2\"},\"5\":{\"text\":\"=SUM(A1:A10)+2\"}}},\"4\":{\"cells\":{\"0\":{\"text\":\"5\"},\"2\":{\"text\":\"SUM(A1,A2)-2\"},\"3\":{\"text\":\"=SUM(A1,A2)-2\"},\"4\":{\"text\":\"SUM(A1:A10)-2\"},\"5\":{\"text\":\"=SUM(A1:A10)-2\"},\"7\":{}}},\"5\":{\"cells\":{\"0\":{\"text\":\"6\"}}},\"6\":{\"cells\":{\"0\":{\"text\":\"7\"},\"2\":{\"text\":\"MAX(A1,A2)\"},\"3\":{\"text\":\"=MAX(A1,A2)\"},\"4\":{\"text\":\"MAX(A1:A10)\"},\"5\":{\"text\":\"=MAX(A1:A10)\"}}},\"7\":{\"cells\":{\"0\":{\"text\":\"8\"},\"2\":{\"text\":\"MAX(A1,A2)*2\"},\"3\":{\"text\":\"=MAX(A1,A2)*2\"},\"4\":{\"text\":\"MAX(A1:A10)*2\"},\"5\":{\"text\":\"=MAX(A1:A10)*2\"}}},\"8\":{\"cells\":{\"0\":{\"text\":\"9\"},\"2\":{\"text\":\"MAX(A1,A2)/2\"},\"3\":{\"text\":\"=MAX(A1,A2)/2\"},\"4\":{\"text\":\"MAX(A1:A10)/2\"},\"5\":{\"text\":\"=MAX(A1:A10)/2\"}}},\"9\":{\"cells\":{\"0\":{\"text\":\"10\"},\"2\":{\"text\":\"MAX(A1,A2)+2\"},\"3\":{\"text\":\"=MAX(A1,A2)+2\"},\"4\":{\"text\":\"MAX(A1:A10)+2\"},\"5\":{\"text\":\"=MAX(A1:A10)+2\"}}},\"10\":{\"cells\":{\"0\":{},\"2\":{\"text\":\"MAX(A1,A2)-2\"},\"3\":{\"text\":\"=MAX(A1,A2)-2\"},\"4\":{\"text\":\"MAX(A1:A10)-2\"},\"5\":{\"text\":\"=MAX(A1:A10)-2\"}}},\"11\":{\"cells\":{\"0\":{}}},\"12\":{\"cells\":{\"2\":{\"text\":\"MIN(A1,A2)\"},\"3\":{\"text\":\"=MIN(A1,A2)\"},\"4\":{\"text\":\"MIN(A1:A10)\"},\"5\":{\"text\":\"=MIN(A1:A10)\"}}},\"13\":{\"cells\":{\"2\":{\"text\":\"MIN(A1,A2)*2\"},\"3\":{\"text\":\"=MIN(A1,A2)*2\"},\"4\":{\"text\":\"MIN(A1:A10)*2\"},\"5\":{\"text\":\"=MIN(A1:A10)*2\"}}},\"14\":{\"cells\":{\"2\":{\"text\":\"MIN(A1,A2)/2\"},\"3\":{\"text\":\"=MIN(A1,A2)/2\"},\"4\":{\"text\":\"MIN(A1:A10)/2\"},\"5\":{\"text\":\"=MIN(A1:A10)/2\"}}},\"15\":{\"cells\":{\"2\":{\"text\":\"MIN(A1,A2)+2\"},\"3\":{\"text\":\"=MIN(A1,A2)+2\"},\"4\":{\"text\":\"MIN(A1:A10)+2\"},\"5\":{\"text\":\"=MIN(A1:A10)+2\"}}},\"16\":{\"cells\":{\"2\":{\"text\":\"MIN(A1,A2)-2\"},\"3\":{\"text\":\"=MIN(A1,A2)-2\"},\"4\":{\"text\":\"MIN(A1:A10)-2\"},\"5\":{\"text\":\"=MIN(A1:A10)-2\"}}},\"18\":{\"cells\":{\"2\":{\"text\":\"AVERAGE(A1,A2)\"},\"3\":{\"text\":\"=AVERAGE(A1,A2)\"},\"4\":{\"text\":\"AVERAGE(A1:A10)\"},\"5\":{\"text\":\"=AVERAGE(A1:A10)\"}}},\"19\":{\"cells\":{\"2\":{\"text\":\"AVERAGE(A1,A2)*2\"},\"3\":{\"text\":\"=AVERAGE(A1,A2)*2\"},\"4\":{\"text\":\"AVERAGE(A1:A10)*2\"},\"5\":{\"text\":\"=AVERAGE(A1:A10)*2\"}}},\"20\":{\"cells\":{\"2\":{\"text\":\"AVERAGE(A1,A2)/2\"},\"3\":{\"text\":\"=AVERAGE(A1,A2)/2\"},\"4\":{\"text\":\"AVERAGE(A1:A10)/2\"},\"5\":{\"text\":\"=AVERAGE(A1:A10)/2\"}}},\"21\":{\"cells\":{\"2\":{\"text\":\"AVERAGE(A1,A2)+2\"},\"3\":{\"text\":\"=AVERAGE(A1,A2)+2\"},\"4\":{\"text\":\"AVERAGE(A1:A10)+2\"},\"5\":{\"text\":\"=AVERAGE(A1:A10)+2\"}}},\"22\":{\"cells\":{\"2\":{\"text\":\"AVERAGE(A1,A2)-2\"},\"3\":{\"text\":\"=AVERAGE(A1,A2)-2\"},\"4\":{\"text\":\"AVERAGE(A1:A10)-2\"},\"5\":{\"text\":\"=AVERAGE(A1:A10)-2\"}}},\"24\":{\"cells\":{\"2\":{\"text\":\"COUNTNZ(A1,A2)\"},\"3\":{\"text\":\"=COUNTNZ(A1,A2)\"},\"4\":{\"text\":\"COUNTNZ(A1:A10)\"},\"5\":{\"text\":\"=COUNTNZ(A1:A10)\"}}},\"25\":{\"cells\":{\"2\":{\"text\":\"COUNTNZ(A1,A2)*2\"},\"3\":{\"text\":\"=COUNTNZ(A1,A2)*2\"},\"4\":{\"text\":\"COUNTNZ(A1:A10)*2\"},\"5\":{\"text\":\"=COUNTNZ(A1:A10)*2\"}}},\"26\":{\"cells\":{\"2\":{\"text\":\"COUNTNZ(A1,A2)/2\"},\"3\":{\"text\":\"=COUNTNZ(A1,A2)/2\"},\"4\":{\"text\":\"COUNTNZ(A1:A10)/2\"},\"5\":{\"text\":\"=COUNTNZ(A1:A10)/2\"}}},\"27\":{\"cells\":{\"2\":{\"text\":\"COUNTNZ(A1,A2)+2\"},\"3\":{\"text\":\"=COUNTNZ(A1,A2)+2\"},\"4\":{\"text\":\"COUNTNZ(A1:A10)+2\"},\"5\":{\"text\":\"=COUNTNZ(A1:A10)+2\"}}},\"28\":{\"cells\":{\"2\":{\"text\":\"COUNTNZ(A1,A2)-2\"},\"3\":{\"text\":\"=COUNTNZ(A1,A2)-2\"},\"4\":{\"text\":\"COUNTNZ(A1:A10)-2\"},\"5\":{\"text\":\"=COUNTNZ(A1:A10)-2\"}}},\"len\":200},\"rpbar\":{\"show\":true,\"pageSize\":\"\",\"btnList\":[]},\"fixedPrintHeadRows\":[],\"fixedPrintTailRows\":[],\"displayConfig\":{},\"background\":false,\"name\":\"sheet1\",\"styles\":[],\"freezeLineColor\":\"rgb(185, 185, 185)\",\"merges\":[]}', NULL, NULL, 'admin', '2024-07-23 10:14:22', 'admin', '2024-07-24 19:17:39', 0, NULL, NULL, 0, 71, NULL, NULL, NULL, NULL);
ALTER TABLE `jimu_report_data_source` MODIFY COLUMN `connect_times` int(11) NULL DEFAULT 0 COMMENT '连接失败次数' AFTER `update_time`;
UPDATE sys_quartz_job SET create_time = '2021-06-30 16:03:09' WHERE id = 'df26ecacf0f75d219d746750fe84bbee';

-- 补充权限注解--
INSERT INTO sys_permission(id, parent_id, name, url, component, is_route, component_name, redirect, menu_type, perms, perms_type, sort_no, always_show, icon, is_leaf, keep_alive, hidden, hide_tab, description, create_by, create_time, update_by, update_time, del_flag, rule_flag, status, internal_or_external) VALUES ('1810652607946940417', '1438782641187074050', '批量彻底删除', NULL, NULL, 0, NULL, NULL, 2, 'system:dict:deleteRecycleBin', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, '15931993294', '2024-07-09 20:29:56.679000', '15931993294', '2024-07-09 20:30:39.092000', 0, NULL, '1', 0);
INSERT INTO sys_permission(id, parent_id, name, url, component, is_route, component_name, redirect, menu_type, perms, perms_type, sort_no, always_show, icon, is_leaf, keep_alive, hidden, hide_tab, description, create_by, create_time, update_by, update_time, del_flag, rule_flag, status, internal_or_external) VALUES ('1808098125316870145', '3f915b2769fc80648e92d04e84ca059d', 'app端编辑用户', NULL, NULL, 0, NULL, NULL, 2, 'system:user:app:edit', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2024-07-02 19:19:20.566000', NULL, NULL, 0, NULL, '1', 0);
INSERT INTO `sys_permission` VALUES ('1800372628805861377', '1701575168519839746', '列表权限', NULL, NULL, 0, NULL, NULL, 2, 'system:tableWhite:list', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, '15931993294', '2024-06-11 11:40:59', NULL, NULL, 0, NULL, '1', 0);
INSERT INTO `sys_permission` VALUES ('1800372727493640194', '1701575168519839746', '添加权限', NULL, NULL, 0, NULL, NULL, 2, 'system:tableWhite:add', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, '15931993294', '2024-06-11 11:41:22', NULL, NULL, 0, NULL, '1', 0);
INSERT INTO `sys_permission` VALUES ('1800372811518132225', '1701575168519839746', '修改权限', NULL, NULL, 0, NULL, NULL, 2, 'system:tableWhite:edit', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, '15931993294', '2024-06-11 11:41:42', NULL, NULL, 0, NULL, '1', 0);
INSERT INTO `sys_permission` VALUES ('1800372906330374146', '1701575168519839746', '删除权限', NULL, NULL, 0, NULL, NULL, 2, 'system:tableWhite:delete', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, '15931993294', '2024-06-11 11:42:05', NULL, NULL, 0, NULL, '1', 0);
INSERT INTO `sys_permission` VALUES ('1800373633509441537', '1701575168519839746', '批量删除', NULL, NULL, 0, NULL, NULL, 2, 'system:tableWhite:deleteBatch', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, '15931993294', '2024-06-11 11:44:58', NULL, NULL, 0, NULL, '1', 0);
INSERT INTO `sys_permission` VALUES ('1800373733220630530', '1701575168519839746', '通过id查询', NULL, NULL, 0, NULL, NULL, 2, 'system:tableWhite:queryById', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, '15931993294', '2024-06-11 11:45:22', NULL, NULL, 0, NULL, '1', 0);
update sys_permission set is_leaf = 0 where id = '1701575168519839746';

-- 网关路由支持逻辑删除---
ALTER TABLE `sys_gateway_route`
    ADD COLUMN `del_flag` int(11) NULL DEFAULT NULL COMMENT '删除状态' AFTER `sys_org_code`;
ALTER TABLE `sys_gateway_route`
    MODIFY COLUMN `name` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '服务名' AFTER `router_id`;
UPDATE sys_gateway_route SET del_flag = 0 WHERE del_flag is null;
INSERT INTO sys_permission(id, parent_id, name, url, component, is_route, component_name, redirect, menu_type, perms, perms_type, sort_no, always_show, icon, is_leaf, keep_alive, hidden, hide_tab, description, create_by, create_time, update_by, update_time, del_flag, rule_flag, status, internal_or_external) VALUES ('1810923799513612290', '1439399179791409153', '彻底删除', NULL, NULL, 0, NULL, NULL, 2, 'system:gateway:deleteRecycleBin', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, '15931993294', '2024-07-10 14:27:33.792000', NULL, NULL, 0, NULL, '1', 0);
INSERT INTO sys_permission(id, parent_id, name, url, component, is_route, component_name, redirect, menu_type, perms, perms_type, sort_no, always_show, icon, is_leaf, keep_alive, hidden, hide_tab, description, create_by, create_time, update_by, update_time, del_flag, rule_flag, status, internal_or_external) VALUES ('1811685464467230721', '1439399179791409153', '还原逻辑删除', NULL, NULL, 0, NULL, NULL, 2, 'system:gateway:putRecycleBin', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, '15931993294', '2024-07-12 16:54:08.873000', NULL, NULL, 0, NULL, '1', 0);
INSERT INTO sys_permission(id, parent_id, name, url, component, is_route, component_name, redirect, menu_type, perms, perms_type, sort_no, always_show, icon, is_leaf, keep_alive, hidden, hide_tab, description, create_by, create_time, update_by, update_time, del_flag, rule_flag, status, internal_or_external) VALUES ('1811685368354754561', '1439399179791409153', '复制路由', NULL, NULL, 0, NULL, NULL, 2, 'system:gateway:copyRoute', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, '15931993294', '2024-07-12 16:53:45.957000', NULL, NULL, 0, NULL, '1', 0);


-- 增加菜单
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024092104265810570', '1808126032603336705', '搜索引擎语法', '/testnet/SearchEngineKeywordList', 'asset/search_keyword/SearchEngineKeywordList', 1, NULL, NULL, 1, NULL, '1', 3.00, 0, NULL, 0, 0, 0, 0, NULL, 'admin', '2024-09-21 16:26:57', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024092111258040406', '2024092104265810570', '导入excel_搜索引擎语法', NULL, NULL, 0, NULL, NULL, 2, 'testnet:search_engine_keyword:importExcel', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2024-09-21 11:25:40', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024092111258040405', '2024092104265810570', '导出excel_搜索引擎语法', NULL, NULL, 0, NULL, NULL, 2, 'testnet:search_engine_keyword:exportXls', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2024-09-21 11:25:40', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024092111258040404', '2024092104265810570', '批量删除搜索引擎语法', NULL, NULL, 0, NULL, NULL, 2, 'testnet:search_engine_keyword:deleteBatch', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2024-09-21 11:25:40', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024092111258040403', '2024092104265810570', '删除搜索引擎语法', NULL, NULL, 0, NULL, NULL, 2, 'testnet:search_engine_keyword:delete', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2024-09-21 11:25:40', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024092111258040402', '2024092104265810570', '编辑搜索引擎语法', NULL, NULL, 0, NULL, NULL, 2, 'testnet:search_engine_keyword:edit', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2024-09-21 11:25:40', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024092111258040401', '2024092104265810570', '添加搜索引擎语法', NULL, NULL, 0, NULL, NULL, 2, 'testnet:search_engine_keyword:add', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2024-09-21 11:25:40', NULL, NULL, 0, 0, '1', 0);

-- 增加权限
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074269849174016', 'f6817f48af4fb3af11b9e8bf182f618b', '2024092104265810570', NULL, '2024-09-21 11:39:16', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074269849174017', 'f6817f48af4fb3af11b9e8bf182f618b', '2024092111258030400', NULL, '2024-09-21 11:39:16', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074269853368321', 'f6817f48af4fb3af11b9e8bf182f618b', '2024092111258040401', NULL, '2024-09-21 11:39:16', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074269853368322', 'f6817f48af4fb3af11b9e8bf182f618b', '2024092111258040402', NULL, '2024-09-21 11:39:16', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074269853368323', 'f6817f48af4fb3af11b9e8bf182f618b', '2024092111258040403', NULL, '2024-09-21 11:39:16', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074269853368324', 'f6817f48af4fb3af11b9e8bf182f618b', '2024092111258040404', NULL, '2024-09-21 11:39:16', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074269853368325', 'f6817f48af4fb3af11b9e8bf182f618b', '2024092111258040405', NULL, '2024-09-21 11:39:16', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074269853368326', 'f6817f48af4fb3af11b9e8bf182f618b', '2024092111258040406', NULL, '2024-09-21 11:39:16', '0:0:0:0:0:0:0:1');

INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074227977437185', '1795010414274428930', '2024092104265810570', NULL, '2024-09-21 11:39:06', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074227977437186', '1795010414274428930', '2024092111258030400', NULL, '2024-09-21 11:39:06', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074227977437187', '1795010414274428930', '2024092111258040401', NULL, '2024-09-21 11:39:06', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074227985825793', '1795010414274428930', '2024092111258040402', NULL, '2024-09-21 11:39:06', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074227985825794', '1795010414274428930', '2024092111258040403', NULL, '2024-09-21 11:39:06', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074227985825795', '1795010414274428930', '2024092111258040404', NULL, '2024-09-21 11:39:06', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074227985825796', '1795010414274428930', '2024092111258040405', NULL, '2024-09-21 11:39:06', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1834074227985825797', '1795010414274428930', '2024092111258040406', NULL, '2024-09-21 11:39:06', '0:0:0:0:0:0:0:1');

-- ----------------------------
-- Table structure for search_engine_keyword
-- ----------------------------
CREATE TABLE `search_engine_keyword`  (
                                          `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
                                          `create_by` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建人',
                                          `create_time` datetime NULL DEFAULT NULL COMMENT '创建日期',
                                          `update_by` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新人',
                                          `update_time` datetime NULL DEFAULT NULL COMMENT '更新日期',
                                          `sys_org_code` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '所属部门',
                                          `engine` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '引擎',
                                          `keyword` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '语法',
                                          `type` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '类型',
                                          `remark` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '说明',
                                          `example` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '例句',
                                          PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of search_engine_keyword
-- ----------------------------
INSERT INTO `search_engine_keyword` VALUES ('1836689622957707266', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'hunter,fofa', 'ip=\"\"', 'sys', '搜索IP为 ”1.1.1.1”的资产', 'ip=\"1.1.1.1\"');
INSERT INTO `search_engine_keyword` VALUES ('1836689759352279042', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'hunter', 'web.title=\"\"', 'sys', '从网站标题中搜索“测试”', 'web.title=\"测试\"');
INSERT INTO `search_engine_keyword` VALUES ('1836689847864676354', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'hunter', 'web.body=\"\"', 'sys', '网站正文包含”测试“的资产', 'web.body=\"测试\"');
INSERT INTO `search_engine_keyword` VALUES ('1836690326115995649', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'hunter', 'domain=\"\"', 'sys', '搜索域名包含\"qianxin.com\"的网站', 'domain=\"qianxin.com\"');
INSERT INTO `search_engine_keyword` VALUES ('1836690461956919297', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'hunter', 'domain.suffix=\"\"', 'sys', '搜索主域为\"qianxin.com\"的网站', 'domain.suffix=\"qianxin.com\"');
INSERT INTO `search_engine_keyword` VALUES ('1836691605479378946', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'hunter', 'is_web=true', 'sys', '搜索web资产', 'is_web=true');
INSERT INTO `search_engine_keyword` VALUES ('1836691936560959490', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'fofa', 'port=\"\"', 'sys', '通过端口号进行查询', 'port=\"6379\"');
INSERT INTO `search_engine_keyword` VALUES ('1836692047559020545', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'fofa', 'domain=\"\"', 'sys', '通过根域名进行查询', 'domain=\"qq.com\"');
INSERT INTO `search_engine_keyword` VALUES ('1836692153033183234', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'fofa', 'host=\"\"', 'sys', '通过主机名进行查询', 'host=\".fofa.info\"');
INSERT INTO `search_engine_keyword` VALUES ('1836692355173470209', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'fofa', 'title=\"\"', 'sys', '通过网站标题进行查询', 'title=\"beijing\"');
INSERT INTO `search_engine_keyword` VALUES ('1836692468155437058', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'fofa', 'header=\"\"', 'sys', '通过响应标头进行查询', 'header=\"elastic\"');
INSERT INTO `search_engine_keyword` VALUES ('1836692559708704770', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'fofa', 'body=\"\"', 'sys', '通过HTML正文进行查询', 'body=\"网络空间测绘\"');
INSERT INTO `search_engine_keyword` VALUES ('1836692777799929857', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'fofa', 'icon_hash=\"\"', 'sys', '通过网站图标的hash值进行查询', 'icon_hash=\"-247388890\"');
INSERT INTO `search_engine_keyword` VALUES ('1836693286493507586', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'quake', 'ip:\"\"', 'sys', '支持检索单个 IP、CIDR 地址段、支持 IPv6 地址', 'ip:\"1.1.1.1\"');
INSERT INTO `search_engine_keyword` VALUES ('1836693452642471938', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', 'quake', 'domain:\"\"', 'sys', '网站域名信息', 'domain:\"360.cn\" domain:*.360.cn');

INSERT INTO `jeecg-boot`.`sys_dict` (`id`, `dict_name`, `dict_code`, `description`, `del_flag`, `create_by`, `create_time`, `update_by`, `update_time`, `type`, `tenant_id`, `low_app_id`) VALUES ('1836317967290900481', '空间引擎关键字', 'search_keyword_type', NULL, 0, 'admin', '2024-05-01 00:00:00', NULL, NULL, 0, 0, NULL);

INSERT INTO `jeecg-boot`.`sys_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `item_color`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('1836318040246624257', '1836317967290900481', '系统', 'sys', NULL, NULL, 1, 1, 'admin', '2024-05-01 00:00:00', 'admin', NULL);
INSERT INTO `jeecg-boot`.`sys_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `item_color`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('1836318078632894465', '1836317967290900481', '用户', 'user', NULL, NULL, 1, 1, 'admin', '2024-05-01 00:00:00', 'admin', NULL);

INSERT INTO `jeecg-boot`.`lite_flow_script` (`id`, `create_by`, `create_time`, `update_by`, `update_time`, `sys_org_code`, `script_name`, `script_type`, `script_data`, `script_language`, `enable`, `application_name`, `script_id`, `script_dict`, `version_check_command`, `update_command`, `need_install`, `install_command`) VALUES ('1838155243516059649', 'admin', '2024-05-01 00:00:00', NULL, NULL, 'A01', '检测IP是否存在防火墙', 'script', 'import com.alibaba.fastjson.JSONObject;\nimport com.yomahub.liteflow.script.ScriptExecuteWrap;\nimport com.yomahub.liteflow.script.body.JaninoCommonScriptBody;\nimport com.yomahub.liteflow.spi.holder.ContextAwareHolder;\nimport testnet.client.service.ILiteFlowMessageSendService;\nimport testnet.common.dto.AssetUpdateDTO;\nimport testnet.common.dto.IpOrSubDomainToPortDTO;\nimport testnet.common.entity.liteflow.TaskExecuteMessage;\nimport testnet.common.utils.CommandUtils;\n\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.nio.file.Paths;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.UUID;\n\n\n/**\n * 脚本名称：Naabu 防火墙探测\n * 适用资产：子域名、IP\n * 配置：\n * command: \'naabu -no-stdin -c 200 -json -host %s -o %s -verify\'\n * 结果处理类名: assetUpdateProcessor\n * 原理：随机探测3个TCP端口，大于2个端口开放则说明可能存在防火墙\n */\npublic class PortFirewall implements JaninoCommonScriptBody {\n\n    private static final int MIN_PORT = 20000;\n    private static final int MAX_PORT = 60000;\n    private static final int PORT_COUNT = 3;\n    private ILiteFlowMessageSendService messageSendService;\n\n    public Void body(ScriptExecuteWrap wrap) {\n        // 获取的是chain初始化的参数\n        TaskExecuteMessage taskExecuteMessage = (TaskExecuteMessage) wrap.cmp.getRequestData();\n        try {\n            messageSendService = (ILiteFlowMessageSendService) ContextAwareHolder.loadContextAware().getBean(ILiteFlowMessageSendService.class);\n            messageSendService.setTaskId(taskExecuteMessage.getTaskId());\n            JSONObject config = JSONObject.parseObject(taskExecuteMessage.getConfig());\n            JSONObject instanceParams = JSONObject.parseObject(taskExecuteMessage.getTaskParams());\n            String resultPath = taskExecuteMessage.getResultPath() + \"naabu_\" + UUID.randomUUID() + \".json\";\n            messageSendService.INFO(\"结果保存路径:{}\", resultPath);\n            String command = config.getString(\"command\");\n            String asset = \"\";\n            switch (taskExecuteMessage.getAssetType()) {\n                case \"ip\":\n                    asset = instanceParams.getString(\"ip\");\n                    break;\n                case \"sub_domain\":\n                    asset = instanceParams.getString(\"subDomain\");\n                    break;\n            }\n            command = String.format(command, getRandomPorts(), asset, resultPath);\n            messageSendService.INFO(\"开始执行Nabbu防火墙探测,命令是:{}\", command);\n            CommandUtils.CommandResult result = CommandUtils.executeCommand(command);\n            if (result.getExitCode() == 0) {\n                BufferedReader reader = new BufferedReader(new FileReader(Paths.get(resultPath).toFile()));\n                String line;\n                List<IpOrSubDomainToPortDTO.Port> portList = new ArrayList<>();\n                int resultCount = 0;\n                while ((line = reader.readLine()) != null) {\n                    // 处理每一行内容\n                    JSONObject jsonObject = JSONObject.parseObject(line);\n                    messageSendService.INFO(\"Nabbu端口扫描执行结果:{}\", jsonObject);\n                    resultCount = resultCount + 1;\n                }\n                if (resultCount >= 2) {\n                    messageSendService.INFO(\"资产: {} 端口扫描完成，端口开放数量: {}, 可能存在防火墙\", asset, resultCount);\n                    instanceParams.put(\"assetLabel\", \"防火墙\");\n                    AssetUpdateDTO assetUpdateDTO = new AssetUpdateDTO();\n                    assetUpdateDTO.setData(instanceParams.toString());\n                    messageSendService.sendResult(assetUpdateDTO);\n                } else {\n                    messageSendService.INFO(\"资产: {} 端口扫描完成，端口开放数量: {}, 不存在防火墙\", asset, resultCount);\n                }\n            } else if (result.getExitCode() == 1) {\n                messageSendService.INFO(\"资产: {} 端口扫描完成，没有端口开放, 不存在防火墙\", asset);\n            } else {\n                messageSendService.ERROR(\"Nabbu端口扫描执行失败,错误信息是:{}\", result.getExitCode());\n            }\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n        return null;\n    }\n\n    private String getRandomPorts() {\n\n        List<Integer> ports = new ArrayList<>();\n        for (int i = MIN_PORT; i <= MAX_PORT; i++) {\n            ports.add(i);\n        }\n        Collections.shuffle(ports);\n        List<Integer> selectedPorts = ports.subList(0, PORT_COUNT);\n        StringBuilder result = new StringBuilder();\n        for (int i = 0; i < selectedPorts.size(); i++) {\n            if (i > 0) {\n                result.append(\",\");\n            }\n            result.append(selectedPorts.get(i));\n        }\n        messageSendService.INFO(\"随机选择的端口是:{}\", result);\n        return result.toString();\n    }\n}', 'java', 1, 'testnet-client', 'port_firewall', 'PORT', 'naabu -version 2>&1 | grep -oP \'Current Version: \\K\\d+\\.\\d+\\.\\d+\'', 'naabu -up', 1, 'export GOPROXY=https://goproxy.cn,direct\ngo install -v github.com/projectdiscovery/naabu/v2/cmd/naabu@latest');
INSERT INTO `jeecg-boot`.`lite_flow_chain` (`id`, `create_by`, `create_time`, `update_by`, `update_time`, `sys_org_code`, `chain_name`, `el_data`, `application_name`, `enable`, `asset_type`, `icon`, `config`, `processor_class_name`, `default_thread`) VALUES ('1838153120644587521', 'admin', '2024-05-01 00:00:00', 'admin', '2024-05-01 00:00:00', 'A01', '防火墙探测', 'THEN(port_firewall)', 'testnet-client', 1, 'ip,sub_domain', 'ant-design:rocket-twotone', 'command: \'naabu -no-stdin -p %s -json -host %s -o %s -verify\'', 'assetUpdateProcessor', 2);

UPDATE `jeecg-boot`.`lite_flow_script` SET `script_dict` = 'SYSTEM' WHERE `id` = '1816737017152946177';
UPDATE `jeecg-boot`.`lite_flow_script` SET `script_dict` = 'SYSTEM' WHERE `id` = '1820078397037608961';

# 增加黑名单支持正则
INSERT INTO `jeecg-boot`.`sys_dict` (`id`, `dict_name`, `dict_code`, `description`, `del_flag`, `create_by`, `create_time`, `update_by`, `update_time`, `type`, `tenant_id`, `low_app_id`) VALUES ('1838544952025137154', '黑名单类型', 'blacklist_type', NULL, 0, 'admin', '2024-05-01 00:00:00', NULL, NULL, 0, 0, NULL);
INSERT INTO `jeecg-boot`.`sys_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `item_color`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('1838545228584960002', '1838544952025137154', '正则表达式', 'regexp', NULL, NULL, 1, 1, 'admin', '2024-05-01 00:00:00', NULL, NULL);
INSERT INTO `jeecg-boot`.`sys_dict_item` (`id`, `dict_id`, `item_text`, `item_value`, `item_color`, `description`, `sort_order`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('1838545151355240449', '1838544952025137154', '关键字', 'keyword', NULL, NULL, 1, 1, 'admin', '2024-05-01 00:00:00', NULL, NULL);

ALTER TABLE `jeecg-boot`.`asset_black_list`
    ADD COLUMN `blacklist_type` varchar(64) DEFAULT 'keyword' COMMENT '黑名单类型';

ALTER TABLE `jeecg-boot`.`client`
    ADD UNIQUE INDEX `idx_client_name`(`client_name` ASC) USING BTREE;

CREATE TABLE `message_config`  (
                                   `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
                                   `create_by` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '创建人',
                                   `create_time` datetime NULL DEFAULT NULL COMMENT '创建日期',
                                   `update_by` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '更新人',
                                   `update_time` datetime NULL DEFAULT NULL COMMENT '更新日期',
                                   `sys_org_code` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '所属部门',
                                   `web_hook_type` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '消息类型',
                                   `web_hook_url` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT 'WebHook地址',
                                   PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;

# 消息通知菜单
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024050101465050350', '1443390062919208961', '消息推送配置', '/testnet/messageConfigList', 'message/config/MessageConfigList', 1, NULL, NULL, 1, NULL, '1', 0.00, 0, NULL, 0, 0, 0, 0, NULL, 'admin', '2024-09-27 13:46:35', 'admin', '2024-09-27 14:46:04', 0, 0, '1', 0);
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024050101465050351', '2024050101465050350', '添加消息推送配置', NULL, NULL, 0, NULL, NULL, 2, 'iotaa:message_config:add', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2024-09-27 13:46:35', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024050101465050352', '2024050101465050350', '编辑消息推送配置', NULL, NULL, 0, NULL, NULL, 2, 'iotaa:message_config:edit', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2024-09-27 13:46:35', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024050101465050353', '2024050101465050350', '删除消息推送配置', NULL, NULL, 0, NULL, NULL, 2, 'iotaa:message_config:delete', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2024-09-27 13:46:35', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024050101465050354', '2024050101465050350', '批量删除消息推送配置', NULL, NULL, 0, NULL, NULL, 2, 'iotaa:message_config:deleteBatch', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2024-09-27 13:46:35', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024050101465050355', '2024050101465050350', '导出excel_消息推送配置', NULL, NULL, 0, NULL, NULL, 2, 'iotaa:message_config:exportXls', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2024-09-27 13:46:35', NULL, NULL, 0, 0, '1', 0);
INSERT INTO `jeecg-boot`.`sys_permission` (`id`, `parent_id`, `name`, `url`, `component`, `is_route`, `component_name`, `redirect`, `menu_type`, `perms`, `perms_type`, `sort_no`, `always_show`, `icon`, `is_leaf`, `keep_alive`, `hidden`, `hide_tab`, `description`, `create_by`, `create_time`, `update_by`, `update_time`, `del_flag`, `rule_flag`, `status`, `internal_or_external`) VALUES ('2024050101465050356', '2024050101465050350', '导入excel_消息推送配置', NULL, NULL, 0, NULL, NULL, 2, 'iotaa:message_config:importExcel', '1', NULL, 0, NULL, 1, 0, 0, 0, NULL, 'admin', '2024-09-27 13:46:35', NULL, NULL, 0, 0, '1', 0);

# 消息通知权限
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557321748611074', 'f6817f48af4fb3af11b9e8bf182f618b', '2024050101465050350', NULL, '2024-10-01 14:46:57', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557321748611075', 'f6817f48af4fb3af11b9e8bf182f618b', '2024050101465050351', NULL, '2024-10-01 14:46:57', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557321748611076', 'f6817f48af4fb3af11b9e8bf182f618b', '2024050101465050352', NULL, '2024-10-01 14:46:57', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557321748611077', 'f6817f48af4fb3af11b9e8bf182f618b', '2024050101465050353', NULL, '2024-10-01 14:46:57', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557321748611078', 'f6817f48af4fb3af11b9e8bf182f618b', '2024050101465050354', NULL, '2024-10-01 14:46:57', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557321748611079', 'f6817f48af4fb3af11b9e8bf182f618b', '2024050101465050355', NULL, '2024-10-01 14:46:57', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557321748611080', 'f6817f48af4fb3af11b9e8bf182f618b', '2024050101465050356', NULL, '2024-10-01 14:46:57', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557258901159938', '1795010414274428930', '2024050101465050350', NULL, '2024-10-01 14:46:42', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557258913742849', '1795010414274428930', '2024050101465050351', NULL, '2024-10-01 14:46:42', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557258913742850', '1795010414274428930', '2024050101465050352', NULL, '2024-10-01 14:46:42', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557258913742851', '1795010414274428930', '2024050101465050353', NULL, '2024-10-01 14:46:42', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557258913742852', '1795010414274428930', '2024050101465050354', NULL, '2024-10-01 14:46:42', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557258913742853', '1795010414274428930', '2024050101465050355', NULL, '2024-10-01 14:46:42', '0:0:0:0:0:0:0:1');
INSERT INTO `jeecg-boot`.`sys_role_permission` (`id`, `role_id`, `permission_id`, `data_rule_ids`, `operate_date`, `operate_ip`) VALUES ('1839557258913742854', '1795010414274428930', '2024050101465050356', NULL, '2024-10-01 14:46:42', '0:0:0:0:0:0:0:1');


INSERT INTO `jeecg-boot`.`sys_table_white_list` (`id`, `table_name`, `field_name`, `status`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES ('1840632699556663298', 'message_config', 'web_hook_url,id', '1', 'admin', '2024-10-01 14:00:08', NULL, NULL);

ALTER TABLE `jeecg-boot`.`asset_vul`
    MODIFY COLUMN `vul_desc` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL COMMENT '漏洞描述' AFTER `severity`;

INSERT INTO `jeecg-boot`.`sys_sms_template` (`id`, `template_name`, `template_code`, `template_type`, `template_content`, `template_test_json`, `create_time`, `create_by`, `update_time`, `update_by`, `use_status`) VALUES ('1840583930882523137', '漏洞扫描执行结果通知', 'vul_notify', '1', '##### 任务【${taskName}】执行完成\n##### 共发现漏洞数量: ${vulNumber}个', NULL, '2024-10-01 10:46:20', 'admin', NULL, NULL, '1');
INSERT INTO `jeecg-boot`.`sys_sms_template` (`id`, `template_name`, `template_code`, `template_type`, `template_content`, `template_test_json`, `create_time`, `create_by`, `update_time`, `update_by`, `use_status`) VALUES ('1843935461778350081', '域名收集通知', 'company_domain_notify', '1', '##### 域名收集任务【${taskName}】执行完成\n##### 共发现域名数量: ${domainNumber}个', NULL, '2024-10-01 16:44:07', 'admin', NULL, NULL, '1');
INSERT INTO `jeecg-boot`.`sys_sms_template` (`id`, `template_name`, `template_code`, `template_type`, `template_content`, `template_test_json`, `create_time`, `create_by`, `update_time`, `update_by`, `use_status`) VALUES ('1843940627353071617', '子域名收集通知', 'domain_subdomain_notify', '1', '##### 子域名收集任务【${taskName}】执行完成\n##### 共发现子域名数量: ${subDomainNumber}个', NULL, '2024-10-01 17:04:39', 'admin', NULL, NULL, '1');
INSERT INTO `jeecg-boot`.`sys_sms_template` (`id`, `template_name`, `template_code`, `template_type`, `template_content`, `template_test_json`, `create_time`, `create_by`, `update_time`, `update_by`, `use_status`) VALUES ('1843942458053521410', '端口扫描通知', 'port_notify', '1', '##### 端口扫描任务【${taskName}】执行完成\n##### 共发现端口数量: ${portNumber}个', NULL, '2024-10-01 17:11:55', 'admin', NULL, NULL, '1');
INSERT INTO `jeecg-boot`.`sys_sms_template` (`id`, `template_name`, `template_code`, `template_type`, `template_content`, `template_test_json`, `create_time`, `create_by`, `update_time`, `update_by`, `use_status`) VALUES ('1843947113819013122', '节点状态通知', 'client_status_notify', '1', '##### 节点【${clientName}】已离线，请检查状态！', NULL, '2024-10-09 17:30:25', 'admin', NULL, NULL, '1');

UPDATE `jeecg-boot`.`lite_flow_script` SET `script_data` = 'import com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.JSONArray;\nimport com.alibaba.fastjson.JSONObject;\nimport com.yomahub.liteflow.script.ScriptExecuteWrap;\nimport com.yomahub.liteflow.script.body.JaninoCommonScriptBody;\nimport com.yomahub.liteflow.spi.holder.ContextAwareHolder;\nimport testnet.client.service.ILiteFlowMessageSendService;\nimport testnet.common.dto.AssetUpdateDTO;\nimport testnet.common.entity.liteflow.TaskExecuteMessage;\nimport testnet.common.utils.CommandUtils;\nimport testnet.common.utils.FileUtils;\nimport testnet.common.utils.ObjectBase64Decoder;\n\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\nimport java.util.UUID;\n\n/**\n * 脚本名称：Xapp指纹探测\n * 适用资产：WEB\n * 配置：\n * command: \'/testnet-client/xapp -t %s -o %s --silent\'\n * 结果处理类名: assetUpdateProcessor\n */\n\npublic class Xapp implements JaninoCommonScriptBody {\n\n    public Void body(ScriptExecuteWrap wrap) {\n        TaskExecuteMessage taskExecuteMessage = (TaskExecuteMessage) wrap.cmp.getRequestData();\n        JSONObject instanceParams = JSONObject.parseObject(taskExecuteMessage.getTaskParams());\n        JSONObject config = JSONObject.parseObject(taskExecuteMessage.getConfig());\n        try {\n            ILiteFlowMessageSendService sendService = (ILiteFlowMessageSendService) ContextAwareHolder.loadContextAware().getBean(ILiteFlowMessageSendService.class);\n            sendService.setTaskId(taskExecuteMessage.getTaskId());\n            String command = config.getString(\"command\");\n            String asset = instanceParams.getString(\"webUrl\");\n            String resultPath = taskExecuteMessage.getResultPath() + \"xapp_\" + UUID.randomUUID() + \".json\";\n            sendService.INFO(\"结果保存路径:{}\", resultPath);\n            command = String.format(command, asset, resultPath);\n            sendService.INFO(\"开始执行Xapp指纹探测,命令是：{}\", command);\n            // 超时60秒\n            CommandUtils.CommandResult result = CommandUtils.executeCommand(command, 60);\n            if (result.getExitCode() == 0) {\n                if (FileUtils.fileExists(resultPath)) {\n                    String content = new String(Files.readAllBytes(Paths.get(resultPath)));\n                    JSONArray jsonArray = JSON.parseArray(content);\n                    if (jsonArray != null) {\n                        JSONObject jsonObject = new JSONObject();\n                        JSONObject value = jsonArray.getJSONObject(0).getJSONObject(\"value\");\n                        if (value.containsKey(\"title\")) {\n                            String title = value.getString(\"title\");\n                            jsonObject.put(\"webTitle\", title);\n                            sendService.INFO(\"提取到的标题是:{}\", title);\n                        }\n                        JSONArray fingerprints = value.getJSONArray(\"fingerprints\");\n                        JSONObject httpFlow = value.getJSONObject(\"httpFlow\");\n                        if (httpFlow != null) {\n                            JSONArray exchanges = httpFlow.getJSONArray(\"exchanges\");\n                            if (exchanges != null && !exchanges.isEmpty()) {\n                                String requestHeader = exchanges.getJSONObject(0).getJSONObject(\"request\").getString(\"rawHeader\");\n                                jsonObject.put(\"requestHeader\", ObjectBase64Decoder.decodeString(requestHeader));\n                                String statusCode = exchanges.getJSONObject(0).getJSONObject(\"response\").getString(\"status\");\n                                jsonObject.put(\"statusCode\", statusCode.trim());\n                                String responseHeader = exchanges.getJSONObject(0).getJSONObject(\"response\").getString(\"rawHeader\");\n                                jsonObject.put(\"responseHeader\", ObjectBase64Decoder.decodeString(responseHeader));\n                            }\n                        }\n                        JSONArray tech = new JSONArray();\n                        if (fingerprints != null) {\n                            for (int i = 0; i < fingerprints.size(); i++) {\n                                JSONObject fingerprint = fingerprints.getJSONObject(i);\n                                String fingerprintName = fingerprint.getJSONObject(\"product\").getString(\"name\");\n                                sendService.INFO(\"Xapp指纹探测执行成功，获取到的指纹是：{}\", fingerprintName);\n                                JSONObject tmp = new JSONObject();\n                                tmp.put(\"name\", fingerprintName);\n                                tech.add(tmp);\n                            }\n                        }\n\n                        jsonObject.put(\"portId\", instanceParams.getString(\"portId\"));\n                        jsonObject.put(\"domain\", instanceParams.getString(\"domain\"));\n                        jsonObject.put(\"projectId\", instanceParams.getString(\"projectId\"));\n                        jsonObject.put(\"tech\", tech);\n                        AssetUpdateDTO assetUpdateDTO = new AssetUpdateDTO();\n                        assetUpdateDTO.setData(jsonObject.toJSONString());\n                        sendService.sendResult(assetUpdateDTO);\n                    }\n                } else {\n                    sendService.INFO(\"Xapp指纹探测执行成功，结果文件不存在，可能扫描结果为空！\");\n                }\n            } else {\n                sendService.ERROR(\"Xapp指纹探测执行失败,状态码是:{},输出信息:{}\", result.getExitCode(), result.getOutput());\n            }\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n        return null;\n    }\n}', `install_command` = 'curl -sSL https://github.com/chaitin/xapp/releases/download/xapp-0.0.1/xapp_linux_amd64 -o /testnet-client/tools/xapp\nchmod +x /testnet-client/tools/xapp\ncd /testnet-client/tools/\ngit clone --depth 1 --branch main  https://github.com/chaitin/xray-plugins.git' WHERE `id` = '1806614988580831233';
UPDATE `jeecg-boot`.`lite_flow_chain` SET `config` = 'command: \'/testnet-client/tools/xapp -r \"/testnet-client/tools/xray-plugins/**/*.yml\" -t %s -o %s\'' WHERE `id` = '1806615115240423425';
UPDATE `jeecg-boot`.`client_config` SET `config` = 'command: \'/testnet-client/tools/xapp -r \"/testnet-client/tools/xray-plugins/**/*.yml\" -t %s -o %s\'' WHERE `chain_id` = '1806615115240423425';